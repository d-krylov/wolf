
#ifndef WOLF_ENUMS_H
#define WOLF_ENUMS_H

// includes
#include <vulkan/vulkan.h>

namespace Wolf {

// content

enum class ImageLayout {
  E_UNDEFINED = VK_IMAGE_LAYOUT_UNDEFINED,
  E_GENERAL = VK_IMAGE_LAYOUT_GENERAL,
  E_COLOR_ATTACHMENT_OPTIMAL = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL,
  E_DEPTH_STENCIL_ATTACHMENT_OPTIMAL = VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL,
  E_DEPTH_STENCIL_READ_ONLY_OPTIMAL = VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL,
  E_SHADER_READ_ONLY_OPTIMAL = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL,
  E_TRANSFER_SRC_OPTIMAL = VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL,
  E_TRANSFER_DST_OPTIMAL = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL,
  E_PREINITIALIZED = VK_IMAGE_LAYOUT_PREINITIALIZED,
  E_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL = VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL,
  E_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL = VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL,
  E_DEPTH_ATTACHMENT_OPTIMAL = VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL,
  E_DEPTH_READ_ONLY_OPTIMAL = VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL,
  E_STENCIL_ATTACHMENT_OPTIMAL = VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL,
  E_STENCIL_READ_ONLY_OPTIMAL = VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL,
  E_READ_ONLY_OPTIMAL = VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL,
  E_ATTACHMENT_OPTIMAL = VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL
};

enum class AttachmentLoadOp {
  E_LOAD = VK_ATTACHMENT_LOAD_OP_LOAD,
  E_CLEAR = VK_ATTACHMENT_LOAD_OP_CLEAR,
  E_DONT_CARE = VK_ATTACHMENT_LOAD_OP_DONT_CARE
};

enum class AttachmentStoreOp {
  E_STORE = VK_ATTACHMENT_STORE_OP_STORE,
  E_DONT_CARE = VK_ATTACHMENT_STORE_OP_DONT_CARE,
  E_NONE = VK_ATTACHMENT_STORE_OP_NONE
};

enum class ImageType {
  E_1D = VK_IMAGE_TYPE_1D,
  E_2D = VK_IMAGE_TYPE_2D,
  E_3D = VK_IMAGE_TYPE_3D
};

enum class ImageTiling {
  E_OPTIMAL = VK_IMAGE_TILING_OPTIMAL,
  E_LINEAR = VK_IMAGE_TILING_LINEAR
};

enum class ImageViewType {
  E_1D = VK_IMAGE_VIEW_TYPE_1D,
  E_2D = VK_IMAGE_VIEW_TYPE_2D,
  E_3D = VK_IMAGE_VIEW_TYPE_3D,
  E_CUBE = VK_IMAGE_VIEW_TYPE_CUBE,
  E_1D_ARRAY = VK_IMAGE_VIEW_TYPE_1D_ARRAY,
  E_2D_ARRAY = VK_IMAGE_VIEW_TYPE_2D_ARRAY,
  E_CUBE_ARRAY = VK_IMAGE_VIEW_TYPE_CUBE_ARRAY
};

enum class CommandBufferLevel {
  E_PRIMARY = VK_COMMAND_BUFFER_LEVEL_PRIMARY,
  E_SECONDARY = VK_COMMAND_BUFFER_LEVEL_SECONDARY
};

enum class ComponentSwizzle {
  E_IDENTITY = VK_COMPONENT_SWIZZLE_IDENTITY,
  E_ZERO = VK_COMPONENT_SWIZZLE_ZERO,
  E_ONE = VK_COMPONENT_SWIZZLE_ONE,
  E_R = VK_COMPONENT_SWIZZLE_R,
  E_G = VK_COMPONENT_SWIZZLE_G,
  E_B = VK_COMPONENT_SWIZZLE_B,
  E_A = VK_COMPONENT_SWIZZLE_A
};

enum class DescriptorType {
  E_SAMPLER = VK_DESCRIPTOR_TYPE_SAMPLER,
  E_COMBINED_IMAGE_SAMPLER = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER,
  E_SAMPLED_IMAGE = VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE,
  E_STORAGE_IMAGE = VK_DESCRIPTOR_TYPE_STORAGE_IMAGE,
  E_UNIFORM_TEXEL_BUFFER = VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER,
  E_STORAGE_TEXEL_BUFFER = VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER,
  E_UNIFORM_BUFFER = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER,
  E_STORAGE_BUFFER = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER,
  E_UNIFORM_BUFFER_DYNAMIC = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC,
  E_STORAGE_BUFFER_DYNAMIC = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC,
  E_INPUT_ATTACHMENT = VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT,
  E_INLINE_UNIFORM_BLOCK = VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK
};

enum class QueryType {
  E_OCCLUSION = VK_QUERY_TYPE_OCCLUSION,
  E_PIPELINE_STATISTICS = VK_QUERY_TYPE_PIPELINE_STATISTICS,
  E_TIMESTAMP = VK_QUERY_TYPE_TIMESTAMP
};

enum class BorderColor {
  E_FLOAT_TRANSPARENT_BLACK = VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK,
  E_INT_TRANSPARENT_BLACK = VK_BORDER_COLOR_INT_TRANSPARENT_BLACK,
  E_FLOAT_OPAQUE_BLACK = VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK,
  E_INT_OPAQUE_BLACK = VK_BORDER_COLOR_INT_OPAQUE_BLACK,
  E_FLOAT_OPAQUE_WHITE = VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE,
  E_INT_OPAQUE_WHITE = VK_BORDER_COLOR_INT_OPAQUE_WHITE
};

enum class PipelineBindPoint {
  E_GRAPHICS = VK_PIPELINE_BIND_POINT_GRAPHICS,
  E_COMPUTE = VK_PIPELINE_BIND_POINT_COMPUTE
};

enum class PipelineCacheHeaderVersion {
  E_ONE = VK_PIPELINE_CACHE_HEADER_VERSION_ONE
};

enum class PrimitiveTopology {
  E_POINT_LIST = VK_PRIMITIVE_TOPOLOGY_POINT_LIST,
  E_LINE_LIST = VK_PRIMITIVE_TOPOLOGY_LINE_LIST,
  E_LINE_STRIP = VK_PRIMITIVE_TOPOLOGY_LINE_STRIP,
  E_TRIANGLE_LIST = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST,
  E_TRIANGLE_STRIP = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP,
  E_TRIANGLE_FAN = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN,
  E_LINE_LIST_WITH_ADJACENCY = VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY,
  E_LINE_STRIP_WITH_ADJACENCY = VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY,
  E_TRIANGLE_LIST_WITH_ADJACENCY = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY,
  E_TRIANGLE_STRIP_WITH_ADJACENCY = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY,
  E_PATCH_LIST = VK_PRIMITIVE_TOPOLOGY_PATCH_LIST
};

enum class SharingMode {
  E_EXCLUSIVE = VK_SHARING_MODE_EXCLUSIVE,
  E_CONCURRENT = VK_SHARING_MODE_CONCURRENT
};

enum class IndexType {
  E_UINT16 = VK_INDEX_TYPE_UINT16,
  E_UINT32 = VK_INDEX_TYPE_UINT32
};

enum class Filter {
  E_NEAREST = VK_FILTER_NEAREST,
  E_LINEAR = VK_FILTER_LINEAR
};

enum class SamplerMipmapMode {
  E_NEAREST = VK_SAMPLER_MIPMAP_MODE_NEAREST,
  E_LINEAR = VK_SAMPLER_MIPMAP_MODE_LINEAR
};

enum class SamplerAddressMode {
  E_REPEAT = VK_SAMPLER_ADDRESS_MODE_REPEAT,
  E_MIRRORED_REPEAT = VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT,
  E_CLAMP_TO_EDGE = VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE,
  E_CLAMP_TO_BORDER = VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER
};

enum class CompareOp {
  E_NEVER = VK_COMPARE_OP_NEVER,
  E_LESS = VK_COMPARE_OP_LESS,
  E_EQUAL = VK_COMPARE_OP_EQUAL,
  E_LESS_OR_EQUAL = VK_COMPARE_OP_LESS_OR_EQUAL,
  E_GREATER = VK_COMPARE_OP_GREATER,
  E_NOT_EQUAL = VK_COMPARE_OP_NOT_EQUAL,
  E_GREATER_OR_EQUAL = VK_COMPARE_OP_GREATER_OR_EQUAL,
  E_ALWAYS = VK_COMPARE_OP_ALWAYS
};

enum class PolygonMode {
  E_FILL = VK_POLYGON_MODE_FILL,
  E_LINE = VK_POLYGON_MODE_LINE,
  E_POINT = VK_POLYGON_MODE_POINT
};

enum class FrontFace {
  E_COUNTER_CLOCKWISE = VK_FRONT_FACE_COUNTER_CLOCKWISE,
  E_CLOCKWISE = VK_FRONT_FACE_CLOCKWISE
};

enum class BlendFactor {
  E_ZERO = VK_BLEND_FACTOR_ZERO,
  E_ONE = VK_BLEND_FACTOR_ONE,
  E_SRC_COLOR = VK_BLEND_FACTOR_SRC_COLOR,
  E_ONE_MINUS_SRC_COLOR = VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR,
  E_DST_COLOR = VK_BLEND_FACTOR_DST_COLOR,
  E_ONE_MINUS_DST_COLOR = VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR,
  E_SRC_ALPHA = VK_BLEND_FACTOR_SRC_ALPHA,
  E_ONE_MINUS_SRC_ALPHA = VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA,
  E_DST_ALPHA = VK_BLEND_FACTOR_DST_ALPHA,
  E_ONE_MINUS_DST_ALPHA = VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA,
  E_CONSTANT_COLOR = VK_BLEND_FACTOR_CONSTANT_COLOR,
  E_ONE_MINUS_CONSTANT_COLOR = VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR,
  E_CONSTANT_ALPHA = VK_BLEND_FACTOR_CONSTANT_ALPHA,
  E_ONE_MINUS_CONSTANT_ALPHA = VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA,
  E_SRC_ALPHA_SATURATE = VK_BLEND_FACTOR_SRC_ALPHA_SATURATE,
  E_SRC1_COLOR = VK_BLEND_FACTOR_SRC1_COLOR,
  E_ONE_MINUS_SRC1_COLOR = VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR,
  E_SRC1_ALPHA = VK_BLEND_FACTOR_SRC1_ALPHA,
  E_ONE_MINUS_SRC1_ALPHA = VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA
};

enum class BlendOp {
  E_ADD = VK_BLEND_OP_ADD,
  E_SUBTRACT = VK_BLEND_OP_SUBTRACT,
  E_REVERSE_SUBTRACT = VK_BLEND_OP_REVERSE_SUBTRACT,
  E_MIN = VK_BLEND_OP_MIN,
  E_MAX = VK_BLEND_OP_MAX
};

enum class StencilOp {
  E_KEEP = VK_STENCIL_OP_KEEP,
  E_ZERO = VK_STENCIL_OP_ZERO,
  E_REPLACE = VK_STENCIL_OP_REPLACE,
  E_INCREMENT_AND_CLAMP = VK_STENCIL_OP_INCREMENT_AND_CLAMP,
  E_DECREMENT_AND_CLAMP = VK_STENCIL_OP_DECREMENT_AND_CLAMP,
  E_INVERT = VK_STENCIL_OP_INVERT,
  E_INCREMENT_AND_WRAP = VK_STENCIL_OP_INCREMENT_AND_WRAP,
  E_DECREMENT_AND_WRAP = VK_STENCIL_OP_DECREMENT_AND_WRAP
};

enum class LogicOp {
  E_CLEAR = VK_LOGIC_OP_CLEAR,
  E_AND = VK_LOGIC_OP_AND,
  E_AND_REVERSE = VK_LOGIC_OP_AND_REVERSE,
  E_COPY = VK_LOGIC_OP_COPY,
  E_AND_INVERTED = VK_LOGIC_OP_AND_INVERTED,
  E_NO_OP = VK_LOGIC_OP_NO_OP,
  E_XOR = VK_LOGIC_OP_XOR,
  E_OR = VK_LOGIC_OP_OR,
  E_NOR = VK_LOGIC_OP_NOR,
  E_EQUIVALENT = VK_LOGIC_OP_EQUIVALENT,
  E_INVERT = VK_LOGIC_OP_INVERT,
  E_OR_REVERSE = VK_LOGIC_OP_OR_REVERSE,
  E_COPY_INVERTED = VK_LOGIC_OP_COPY_INVERTED,
  E_OR_INVERTED = VK_LOGIC_OP_OR_INVERTED,
  E_NAND = VK_LOGIC_OP_NAND,
  E_SET = VK_LOGIC_OP_SET
};

enum class InternalAllocationType {
  E_EXECUTABLE = VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE
};

enum class SystemAllocationScope {
  E_COMMAND = VK_SYSTEM_ALLOCATION_SCOPE_COMMAND,
  E_OBJECT = VK_SYSTEM_ALLOCATION_SCOPE_OBJECT,
  E_CACHE = VK_SYSTEM_ALLOCATION_SCOPE_CACHE,
  E_DEVICE = VK_SYSTEM_ALLOCATION_SCOPE_DEVICE,
  E_INSTANCE = VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE
};

enum class PhysicalDeviceType {
  E_OTHER = VK_PHYSICAL_DEVICE_TYPE_OTHER,
  E_INTEGRATED_GPU = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU,
  E_DISCRETE_GPU = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU,
  E_VIRTUAL_GPU = VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU,
  E_CPU = VK_PHYSICAL_DEVICE_TYPE_CPU
};

enum class VertexInputRate {
  E_VERTEX = VK_VERTEX_INPUT_RATE_VERTEX,
  E_INSTANCE = VK_VERTEX_INPUT_RATE_INSTANCE
};

enum class Format {
  E_UNDEFINED = VK_FORMAT_UNDEFINED,
  E_R4G4_UNORM_PACK8 = VK_FORMAT_R4G4_UNORM_PACK8,
  E_R4G4B4A4_UNORM_PACK16 = VK_FORMAT_R4G4B4A4_UNORM_PACK16,
  E_B4G4R4A4_UNORM_PACK16 = VK_FORMAT_B4G4R4A4_UNORM_PACK16,
  E_R5G6B5_UNORM_PACK16 = VK_FORMAT_R5G6B5_UNORM_PACK16,
  E_B5G6R5_UNORM_PACK16 = VK_FORMAT_B5G6R5_UNORM_PACK16,
  E_R5G5B5A1_UNORM_PACK16 = VK_FORMAT_R5G5B5A1_UNORM_PACK16,
  E_B5G5R5A1_UNORM_PACK16 = VK_FORMAT_B5G5R5A1_UNORM_PACK16,
  E_A1R5G5B5_UNORM_PACK16 = VK_FORMAT_A1R5G5B5_UNORM_PACK16,
  E_R8_UNORM = VK_FORMAT_R8_UNORM,
  E_R8_SNORM = VK_FORMAT_R8_SNORM,
  E_R8_USCALED = VK_FORMAT_R8_USCALED,
  E_R8_SSCALED = VK_FORMAT_R8_SSCALED,
  E_R8_UINT = VK_FORMAT_R8_UINT,
  E_R8_SINT = VK_FORMAT_R8_SINT,
  E_R8_SRGB = VK_FORMAT_R8_SRGB,
  E_R8G8_UNORM = VK_FORMAT_R8G8_UNORM,
  E_R8G8_SNORM = VK_FORMAT_R8G8_SNORM,
  E_R8G8_USCALED = VK_FORMAT_R8G8_USCALED,
  E_R8G8_SSCALED = VK_FORMAT_R8G8_SSCALED,
  E_R8G8_UINT = VK_FORMAT_R8G8_UINT,
  E_R8G8_SINT = VK_FORMAT_R8G8_SINT,
  E_R8G8_SRGB = VK_FORMAT_R8G8_SRGB,
  E_R8G8B8_UNORM = VK_FORMAT_R8G8B8_UNORM,
  E_R8G8B8_SNORM = VK_FORMAT_R8G8B8_SNORM,
  E_R8G8B8_USCALED = VK_FORMAT_R8G8B8_USCALED,
  E_R8G8B8_SSCALED = VK_FORMAT_R8G8B8_SSCALED,
  E_R8G8B8_UINT = VK_FORMAT_R8G8B8_UINT,
  E_R8G8B8_SINT = VK_FORMAT_R8G8B8_SINT,
  E_R8G8B8_SRGB = VK_FORMAT_R8G8B8_SRGB,
  E_B8G8R8_UNORM = VK_FORMAT_B8G8R8_UNORM,
  E_B8G8R8_SNORM = VK_FORMAT_B8G8R8_SNORM,
  E_B8G8R8_USCALED = VK_FORMAT_B8G8R8_USCALED,
  E_B8G8R8_SSCALED = VK_FORMAT_B8G8R8_SSCALED,
  E_B8G8R8_UINT = VK_FORMAT_B8G8R8_UINT,
  E_B8G8R8_SINT = VK_FORMAT_B8G8R8_SINT,
  E_B8G8R8_SRGB = VK_FORMAT_B8G8R8_SRGB,
  E_R8G8B8A8_UNORM = VK_FORMAT_R8G8B8A8_UNORM,
  E_R8G8B8A8_SNORM = VK_FORMAT_R8G8B8A8_SNORM,
  E_R8G8B8A8_USCALED = VK_FORMAT_R8G8B8A8_USCALED,
  E_R8G8B8A8_SSCALED = VK_FORMAT_R8G8B8A8_SSCALED,
  E_R8G8B8A8_UINT = VK_FORMAT_R8G8B8A8_UINT,
  E_R8G8B8A8_SINT = VK_FORMAT_R8G8B8A8_SINT,
  E_R8G8B8A8_SRGB = VK_FORMAT_R8G8B8A8_SRGB,
  E_B8G8R8A8_UNORM = VK_FORMAT_B8G8R8A8_UNORM,
  E_B8G8R8A8_SNORM = VK_FORMAT_B8G8R8A8_SNORM,
  E_B8G8R8A8_USCALED = VK_FORMAT_B8G8R8A8_USCALED,
  E_B8G8R8A8_SSCALED = VK_FORMAT_B8G8R8A8_SSCALED,
  E_B8G8R8A8_UINT = VK_FORMAT_B8G8R8A8_UINT,
  E_B8G8R8A8_SINT = VK_FORMAT_B8G8R8A8_SINT,
  E_B8G8R8A8_SRGB = VK_FORMAT_B8G8R8A8_SRGB,
  E_A8B8G8R8_UNORM_PACK32 = VK_FORMAT_A8B8G8R8_UNORM_PACK32,
  E_A8B8G8R8_SNORM_PACK32 = VK_FORMAT_A8B8G8R8_SNORM_PACK32,
  E_A8B8G8R8_USCALED_PACK32 = VK_FORMAT_A8B8G8R8_USCALED_PACK32,
  E_A8B8G8R8_SSCALED_PACK32 = VK_FORMAT_A8B8G8R8_SSCALED_PACK32,
  E_A8B8G8R8_UINT_PACK32 = VK_FORMAT_A8B8G8R8_UINT_PACK32,
  E_A8B8G8R8_SINT_PACK32 = VK_FORMAT_A8B8G8R8_SINT_PACK32,
  E_A8B8G8R8_SRGB_PACK32 = VK_FORMAT_A8B8G8R8_SRGB_PACK32,
  E_A2R10G10B10_UNORM_PACK32 = VK_FORMAT_A2R10G10B10_UNORM_PACK32,
  E_A2R10G10B10_SNORM_PACK32 = VK_FORMAT_A2R10G10B10_SNORM_PACK32,
  E_A2R10G10B10_USCALED_PACK32 = VK_FORMAT_A2R10G10B10_USCALED_PACK32,
  E_A2R10G10B10_SSCALED_PACK32 = VK_FORMAT_A2R10G10B10_SSCALED_PACK32,
  E_A2R10G10B10_UINT_PACK32 = VK_FORMAT_A2R10G10B10_UINT_PACK32,
  E_A2R10G10B10_SINT_PACK32 = VK_FORMAT_A2R10G10B10_SINT_PACK32,
  E_A2B10G10R10_UNORM_PACK32 = VK_FORMAT_A2B10G10R10_UNORM_PACK32,
  E_A2B10G10R10_SNORM_PACK32 = VK_FORMAT_A2B10G10R10_SNORM_PACK32,
  E_A2B10G10R10_USCALED_PACK32 = VK_FORMAT_A2B10G10R10_USCALED_PACK32,
  E_A2B10G10R10_SSCALED_PACK32 = VK_FORMAT_A2B10G10R10_SSCALED_PACK32,
  E_A2B10G10R10_UINT_PACK32 = VK_FORMAT_A2B10G10R10_UINT_PACK32,
  E_A2B10G10R10_SINT_PACK32 = VK_FORMAT_A2B10G10R10_SINT_PACK32,
  E_R16_UNORM = VK_FORMAT_R16_UNORM,
  E_R16_SNORM = VK_FORMAT_R16_SNORM,
  E_R16_USCALED = VK_FORMAT_R16_USCALED,
  E_R16_SSCALED = VK_FORMAT_R16_SSCALED,
  E_R16_UINT = VK_FORMAT_R16_UINT,
  E_R16_SINT = VK_FORMAT_R16_SINT,
  E_R16_SFLOAT = VK_FORMAT_R16_SFLOAT,
  E_R16G16_UNORM = VK_FORMAT_R16G16_UNORM,
  E_R16G16_SNORM = VK_FORMAT_R16G16_SNORM,
  E_R16G16_USCALED = VK_FORMAT_R16G16_USCALED,
  E_R16G16_SSCALED = VK_FORMAT_R16G16_SSCALED,
  E_R16G16_UINT = VK_FORMAT_R16G16_UINT,
  E_R16G16_SINT = VK_FORMAT_R16G16_SINT,
  E_R16G16_SFLOAT = VK_FORMAT_R16G16_SFLOAT,
  E_R16G16B16_UNORM = VK_FORMAT_R16G16B16_UNORM,
  E_R16G16B16_SNORM = VK_FORMAT_R16G16B16_SNORM,
  E_R16G16B16_USCALED = VK_FORMAT_R16G16B16_USCALED,
  E_R16G16B16_SSCALED = VK_FORMAT_R16G16B16_SSCALED,
  E_R16G16B16_UINT = VK_FORMAT_R16G16B16_UINT,
  E_R16G16B16_SINT = VK_FORMAT_R16G16B16_SINT,
  E_R16G16B16_SFLOAT = VK_FORMAT_R16G16B16_SFLOAT,
  E_R16G16B16A16_UNORM = VK_FORMAT_R16G16B16A16_UNORM,
  E_R16G16B16A16_SNORM = VK_FORMAT_R16G16B16A16_SNORM,
  E_R16G16B16A16_USCALED = VK_FORMAT_R16G16B16A16_USCALED,
  E_R16G16B16A16_SSCALED = VK_FORMAT_R16G16B16A16_SSCALED,
  E_R16G16B16A16_UINT = VK_FORMAT_R16G16B16A16_UINT,
  E_R16G16B16A16_SINT = VK_FORMAT_R16G16B16A16_SINT,
  E_R16G16B16A16_SFLOAT = VK_FORMAT_R16G16B16A16_SFLOAT,
  E_R32_UINT = VK_FORMAT_R32_UINT,
  E_R32_SINT = VK_FORMAT_R32_SINT,
  E_R32_SFLOAT = VK_FORMAT_R32_SFLOAT,
  E_R32G32_UINT = VK_FORMAT_R32G32_UINT,
  E_R32G32_SINT = VK_FORMAT_R32G32_SINT,
  E_R32G32_SFLOAT = VK_FORMAT_R32G32_SFLOAT,
  E_R32G32B32_UINT = VK_FORMAT_R32G32B32_UINT,
  E_R32G32B32_SINT = VK_FORMAT_R32G32B32_SINT,
  E_R32G32B32_SFLOAT = VK_FORMAT_R32G32B32_SFLOAT,
  E_R32G32B32A32_UINT = VK_FORMAT_R32G32B32A32_UINT,
  E_R32G32B32A32_SINT = VK_FORMAT_R32G32B32A32_SINT,
  E_R32G32B32A32_SFLOAT = VK_FORMAT_R32G32B32A32_SFLOAT,
  E_R64_UINT = VK_FORMAT_R64_UINT,
  E_R64_SINT = VK_FORMAT_R64_SINT,
  E_R64_SFLOAT = VK_FORMAT_R64_SFLOAT,
  E_R64G64_UINT = VK_FORMAT_R64G64_UINT,
  E_R64G64_SINT = VK_FORMAT_R64G64_SINT,
  E_R64G64_SFLOAT = VK_FORMAT_R64G64_SFLOAT,
  E_R64G64B64_UINT = VK_FORMAT_R64G64B64_UINT,
  E_R64G64B64_SINT = VK_FORMAT_R64G64B64_SINT,
  E_R64G64B64_SFLOAT = VK_FORMAT_R64G64B64_SFLOAT,
  E_R64G64B64A64_UINT = VK_FORMAT_R64G64B64A64_UINT,
  E_R64G64B64A64_SINT = VK_FORMAT_R64G64B64A64_SINT,
  E_R64G64B64A64_SFLOAT = VK_FORMAT_R64G64B64A64_SFLOAT,
  E_B10G11R11_UFLOAT_PACK32 = VK_FORMAT_B10G11R11_UFLOAT_PACK32,
  E_E5B9G9R9_UFLOAT_PACK32 = VK_FORMAT_E5B9G9R9_UFLOAT_PACK32,
  E_D16_UNORM = VK_FORMAT_D16_UNORM,
  E_X8_D24_UNORM_PACK32 = VK_FORMAT_X8_D24_UNORM_PACK32,
  E_D32_SFLOAT = VK_FORMAT_D32_SFLOAT,
  E_S8_UINT = VK_FORMAT_S8_UINT,
  E_D16_UNORM_S8_UINT = VK_FORMAT_D16_UNORM_S8_UINT,
  E_D24_UNORM_S8_UINT = VK_FORMAT_D24_UNORM_S8_UINT,
  E_D32_SFLOAT_S8_UINT = VK_FORMAT_D32_SFLOAT_S8_UINT,
  E_BC1_RGB_UNORM_BLOCK = VK_FORMAT_BC1_RGB_UNORM_BLOCK,
  E_BC1_RGB_SRGB_BLOCK = VK_FORMAT_BC1_RGB_SRGB_BLOCK,
  E_BC1_RGBA_UNORM_BLOCK = VK_FORMAT_BC1_RGBA_UNORM_BLOCK,
  E_BC1_RGBA_SRGB_BLOCK = VK_FORMAT_BC1_RGBA_SRGB_BLOCK,
  E_BC2_UNORM_BLOCK = VK_FORMAT_BC2_UNORM_BLOCK,
  E_BC2_SRGB_BLOCK = VK_FORMAT_BC2_SRGB_BLOCK,
  E_BC3_UNORM_BLOCK = VK_FORMAT_BC3_UNORM_BLOCK,
  E_BC3_SRGB_BLOCK = VK_FORMAT_BC3_SRGB_BLOCK,
  E_BC4_UNORM_BLOCK = VK_FORMAT_BC4_UNORM_BLOCK,
  E_BC4_SNORM_BLOCK = VK_FORMAT_BC4_SNORM_BLOCK,
  E_BC5_UNORM_BLOCK = VK_FORMAT_BC5_UNORM_BLOCK,
  E_BC5_SNORM_BLOCK = VK_FORMAT_BC5_SNORM_BLOCK,
  E_BC6H_UFLOAT_BLOCK = VK_FORMAT_BC6H_UFLOAT_BLOCK,
  E_BC6H_SFLOAT_BLOCK = VK_FORMAT_BC6H_SFLOAT_BLOCK,
  E_BC7_UNORM_BLOCK = VK_FORMAT_BC7_UNORM_BLOCK,
  E_BC7_SRGB_BLOCK = VK_FORMAT_BC7_SRGB_BLOCK,
  E_ETC2_R8G8B8_UNORM_BLOCK = VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK,
  E_ETC2_R8G8B8_SRGB_BLOCK = VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK,
  E_ETC2_R8G8B8A1_UNORM_BLOCK = VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK,
  E_ETC2_R8G8B8A1_SRGB_BLOCK = VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK,
  E_ETC2_R8G8B8A8_UNORM_BLOCK = VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK,
  E_ETC2_R8G8B8A8_SRGB_BLOCK = VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK,
  E_EAC_R11_UNORM_BLOCK = VK_FORMAT_EAC_R11_UNORM_BLOCK,
  E_EAC_R11_SNORM_BLOCK = VK_FORMAT_EAC_R11_SNORM_BLOCK,
  E_EAC_R11G11_UNORM_BLOCK = VK_FORMAT_EAC_R11G11_UNORM_BLOCK,
  E_EAC_R11G11_SNORM_BLOCK = VK_FORMAT_EAC_R11G11_SNORM_BLOCK,
  E_ASTC_4x4_UNORM_BLOCK = VK_FORMAT_ASTC_4x4_UNORM_BLOCK,
  E_ASTC_4x4_SRGB_BLOCK = VK_FORMAT_ASTC_4x4_SRGB_BLOCK,
  E_ASTC_5x4_UNORM_BLOCK = VK_FORMAT_ASTC_5x4_UNORM_BLOCK,
  E_ASTC_5x4_SRGB_BLOCK = VK_FORMAT_ASTC_5x4_SRGB_BLOCK,
  E_ASTC_5x5_UNORM_BLOCK = VK_FORMAT_ASTC_5x5_UNORM_BLOCK,
  E_ASTC_5x5_SRGB_BLOCK = VK_FORMAT_ASTC_5x5_SRGB_BLOCK,
  E_ASTC_6x5_UNORM_BLOCK = VK_FORMAT_ASTC_6x5_UNORM_BLOCK,
  E_ASTC_6x5_SRGB_BLOCK = VK_FORMAT_ASTC_6x5_SRGB_BLOCK,
  E_ASTC_6x6_UNORM_BLOCK = VK_FORMAT_ASTC_6x6_UNORM_BLOCK,
  E_ASTC_6x6_SRGB_BLOCK = VK_FORMAT_ASTC_6x6_SRGB_BLOCK,
  E_ASTC_8x5_UNORM_BLOCK = VK_FORMAT_ASTC_8x5_UNORM_BLOCK,
  E_ASTC_8x5_SRGB_BLOCK = VK_FORMAT_ASTC_8x5_SRGB_BLOCK,
  E_ASTC_8x6_UNORM_BLOCK = VK_FORMAT_ASTC_8x6_UNORM_BLOCK,
  E_ASTC_8x6_SRGB_BLOCK = VK_FORMAT_ASTC_8x6_SRGB_BLOCK,
  E_ASTC_8x8_UNORM_BLOCK = VK_FORMAT_ASTC_8x8_UNORM_BLOCK,
  E_ASTC_8x8_SRGB_BLOCK = VK_FORMAT_ASTC_8x8_SRGB_BLOCK,
  E_ASTC_10x5_UNORM_BLOCK = VK_FORMAT_ASTC_10x5_UNORM_BLOCK,
  E_ASTC_10x5_SRGB_BLOCK = VK_FORMAT_ASTC_10x5_SRGB_BLOCK,
  E_ASTC_10x6_UNORM_BLOCK = VK_FORMAT_ASTC_10x6_UNORM_BLOCK,
  E_ASTC_10x6_SRGB_BLOCK = VK_FORMAT_ASTC_10x6_SRGB_BLOCK,
  E_ASTC_10x8_UNORM_BLOCK = VK_FORMAT_ASTC_10x8_UNORM_BLOCK,
  E_ASTC_10x8_SRGB_BLOCK = VK_FORMAT_ASTC_10x8_SRGB_BLOCK,
  E_ASTC_10x10_UNORM_BLOCK = VK_FORMAT_ASTC_10x10_UNORM_BLOCK,
  E_ASTC_10x10_SRGB_BLOCK = VK_FORMAT_ASTC_10x10_SRGB_BLOCK,
  E_ASTC_12x10_UNORM_BLOCK = VK_FORMAT_ASTC_12x10_UNORM_BLOCK,
  E_ASTC_12x10_SRGB_BLOCK = VK_FORMAT_ASTC_12x10_SRGB_BLOCK,
  E_ASTC_12x12_UNORM_BLOCK = VK_FORMAT_ASTC_12x12_UNORM_BLOCK,
  E_ASTC_12x12_SRGB_BLOCK = VK_FORMAT_ASTC_12x12_SRGB_BLOCK,
  E_G8B8G8R8_422_UNORM = VK_FORMAT_G8B8G8R8_422_UNORM,
  E_B8G8R8G8_422_UNORM = VK_FORMAT_B8G8R8G8_422_UNORM,
  E_G8_B8_R8_3PLANE_420_UNORM = VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM,
  E_G8_B8R8_2PLANE_420_UNORM = VK_FORMAT_G8_B8R8_2PLANE_420_UNORM,
  E_G8_B8_R8_3PLANE_422_UNORM = VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM,
  E_G8_B8R8_2PLANE_422_UNORM = VK_FORMAT_G8_B8R8_2PLANE_422_UNORM,
  E_G8_B8_R8_3PLANE_444_UNORM = VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM,
  E_R10X6_UNORM_PACK16 = VK_FORMAT_R10X6_UNORM_PACK16,
  E_R10X6G10X6_UNORM_2PACK16 = VK_FORMAT_R10X6G10X6_UNORM_2PACK16,
  E_R10X6G10X6B10X6A10X6_UNORM_4PACK16 = VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16,
  E_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 = VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16,
  E_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 = VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16,
  E_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16 = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16,
  E_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16 = VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16,
  E_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16 = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16,
  E_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16 = VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16,
  E_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16 = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16,
  E_R12X4_UNORM_PACK16 = VK_FORMAT_R12X4_UNORM_PACK16,
  E_R12X4G12X4_UNORM_2PACK16 = VK_FORMAT_R12X4G12X4_UNORM_2PACK16,
  E_R12X4G12X4B12X4A12X4_UNORM_4PACK16 = VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16,
  E_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 = VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16,
  E_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 = VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16,
  E_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16 = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16,
  E_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16 = VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16,
  E_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16 = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16,
  E_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16 = VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16,
  E_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16 = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16,
  E_G16B16G16R16_422_UNORM = VK_FORMAT_G16B16G16R16_422_UNORM,
  E_B16G16R16G16_422_UNORM = VK_FORMAT_B16G16R16G16_422_UNORM,
  E_G16_B16_R16_3PLANE_420_UNORM = VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM,
  E_G16_B16R16_2PLANE_420_UNORM = VK_FORMAT_G16_B16R16_2PLANE_420_UNORM,
  E_G16_B16_R16_3PLANE_422_UNORM = VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM,
  E_G16_B16R16_2PLANE_422_UNORM = VK_FORMAT_G16_B16R16_2PLANE_422_UNORM,
  E_G16_B16_R16_3PLANE_444_UNORM = VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM,
  E_G8_B8R8_2PLANE_444_UNORM = VK_FORMAT_G8_B8R8_2PLANE_444_UNORM,
  E_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16 = VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16,
  E_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16 = VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16,
  E_G16_B16R16_2PLANE_444_UNORM = VK_FORMAT_G16_B16R16_2PLANE_444_UNORM,
  E_A4R4G4B4_UNORM_PACK16 = VK_FORMAT_A4R4G4B4_UNORM_PACK16,
  E_A4B4G4R4_UNORM_PACK16 = VK_FORMAT_A4B4G4R4_UNORM_PACK16,
  E_ASTC_4x4_SFLOAT_BLOCK = VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK,
  E_ASTC_5x4_SFLOAT_BLOCK = VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK,
  E_ASTC_5x5_SFLOAT_BLOCK = VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK,
  E_ASTC_6x5_SFLOAT_BLOCK = VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK,
  E_ASTC_6x6_SFLOAT_BLOCK = VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK,
  E_ASTC_8x5_SFLOAT_BLOCK = VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK,
  E_ASTC_8x6_SFLOAT_BLOCK = VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK,
  E_ASTC_8x8_SFLOAT_BLOCK = VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK,
  E_ASTC_10x5_SFLOAT_BLOCK = VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK,
  E_ASTC_10x6_SFLOAT_BLOCK = VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK,
  E_ASTC_10x8_SFLOAT_BLOCK = VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK,
  E_ASTC_10x10_SFLOAT_BLOCK = VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK,
  E_ASTC_12x10_SFLOAT_BLOCK = VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK,
  E_ASTC_12x12_SFLOAT_BLOCK = VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK
};

enum class StructureType {
  E_APPLICATION_INFO = VK_STRUCTURE_TYPE_APPLICATION_INFO,
  E_INSTANCE_CREATE_INFO = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO,
  E_DEVICE_QUEUE_CREATE_INFO = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO,
  E_DEVICE_CREATE_INFO = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO,
  E_SUBMIT_INFO = VK_STRUCTURE_TYPE_SUBMIT_INFO,
  E_MEMORY_ALLOCATE_INFO = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO,
  E_MAPPED_MEMORY_RANGE = VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE,
  E_BIND_SPARSE_INFO = VK_STRUCTURE_TYPE_BIND_SPARSE_INFO,
  E_FENCE_CREATE_INFO = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO,
  E_SEMAPHORE_CREATE_INFO = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO,
  E_EVENT_CREATE_INFO = VK_STRUCTURE_TYPE_EVENT_CREATE_INFO,
  E_QUERY_POOL_CREATE_INFO = VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO,
  E_BUFFER_CREATE_INFO = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO,
  E_BUFFER_VIEW_CREATE_INFO = VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO,
  E_IMAGE_CREATE_INFO = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO,
  E_IMAGE_VIEW_CREATE_INFO = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO,
  E_SHADER_MODULE_CREATE_INFO = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO,
  E_PIPELINE_CACHE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO,
  E_PIPELINE_SHADER_STAGE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO,
  E_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO,
  E_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO,
  E_PIPELINE_TESSELLATION_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO,
  E_PIPELINE_VIEWPORT_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO,
  E_PIPELINE_RASTERIZATION_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO,
  E_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO,
  E_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO,
  E_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO,
  E_PIPELINE_DYNAMIC_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO,
  E_GRAPHICS_PIPELINE_CREATE_INFO = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO,
  E_COMPUTE_PIPELINE_CREATE_INFO = VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO,
  E_PIPELINE_LAYOUT_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO,
  E_SAMPLER_CREATE_INFO = VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO,
  E_DESCRIPTOR_SET_LAYOUT_CREATE_INFO = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO,
  E_DESCRIPTOR_POOL_CREATE_INFO = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO,
  E_DESCRIPTOR_SET_ALLOCATE_INFO = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO,
  E_WRITE_DESCRIPTOR_SET = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET,
  E_COPY_DESCRIPTOR_SET = VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET,
  E_FRAMEBUFFER_CREATE_INFO = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO,
  E_RENDER_PASS_CREATE_INFO = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO,
  E_COMMAND_POOL_CREATE_INFO = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO,
  E_COMMAND_BUFFER_ALLOCATE_INFO = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO,
  E_COMMAND_BUFFER_INHERITANCE_INFO = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO,
  E_COMMAND_BUFFER_BEGIN_INFO = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO,
  E_RENDER_PASS_BEGIN_INFO = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO,
  E_BUFFER_MEMORY_BARRIER = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER,
  E_IMAGE_MEMORY_BARRIER = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER,
  E_MEMORY_BARRIER = VK_STRUCTURE_TYPE_MEMORY_BARRIER,
  E_LOADER_INSTANCE_CREATE_INFO = VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO,
  E_LOADER_DEVICE_CREATE_INFO = VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO,
  E_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES,
  E_BIND_BUFFER_MEMORY_INFO = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO,
  E_BIND_IMAGE_MEMORY_INFO = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO,
  E_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES,
  E_MEMORY_DEDICATED_REQUIREMENTS = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS,
  E_MEMORY_DEDICATED_ALLOCATE_INFO = VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO,
  E_MEMORY_ALLOCATE_FLAGS_INFO = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO,
  E_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO = VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO,
  E_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO = VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO,
  E_DEVICE_GROUP_SUBMIT_INFO = VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO,
  E_DEVICE_GROUP_BIND_SPARSE_INFO = VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO,
  E_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO = VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO,
  E_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO = VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO,
  E_PHYSICAL_DEVICE_GROUP_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES,
  E_DEVICE_GROUP_DEVICE_CREATE_INFO = VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO,
  E_BUFFER_MEMORY_REQUIREMENTS_INFO_2 = VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2,
  E_IMAGE_MEMORY_REQUIREMENTS_INFO_2 = VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2,
  E_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2 = VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2,
  E_MEMORY_REQUIREMENTS_2 = VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2,
  E_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2 = VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2,
  E_PHYSICAL_DEVICE_FEATURES_2 = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2,
  E_PHYSICAL_DEVICE_PROPERTIES_2 = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2,
  E_FORMAT_PROPERTIES_2 = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2,
  E_IMAGE_FORMAT_PROPERTIES_2 = VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2,
  E_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2 = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2,
  E_QUEUE_FAMILY_PROPERTIES_2 = VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2,
  E_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2 = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2,
  E_SPARSE_IMAGE_FORMAT_PROPERTIES_2 = VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2,
  E_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2 = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2,
  E_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES,
  E_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO = VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO,
  E_IMAGE_VIEW_USAGE_CREATE_INFO = VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO,
  E_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO,
  E_RENDER_PASS_MULTIVIEW_CREATE_INFO = VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO,
  E_PHYSICAL_DEVICE_MULTIVIEW_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES,
  E_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES,
  E_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,
  E_PROTECTED_SUBMIT_INFO = VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO,
  E_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES,
  E_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES,
  E_DEVICE_QUEUE_INFO_2 = VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2,
  E_SAMPLER_YCBCR_CONVERSION_CREATE_INFO = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO,
  E_SAMPLER_YCBCR_CONVERSION_INFO = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO,
  E_BIND_IMAGE_PLANE_MEMORY_INFO = VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO,
  E_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO = VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO,
  E_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES,
  E_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES = VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES,
  E_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO = VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO,
  E_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO,
  E_EXTERNAL_IMAGE_FORMAT_PROPERTIES = VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES,
  E_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO,
  E_EXTERNAL_BUFFER_PROPERTIES = VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES,
  E_PHYSICAL_DEVICE_ID_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES,
  E_EXTERNAL_MEMORY_BUFFER_CREATE_INFO = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO,
  E_EXTERNAL_MEMORY_IMAGE_CREATE_INFO = VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO,
  E_EXPORT_MEMORY_ALLOCATE_INFO = VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO,
  E_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO,
  E_EXTERNAL_FENCE_PROPERTIES = VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES,
  E_EXPORT_FENCE_CREATE_INFO = VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO,
  E_EXPORT_SEMAPHORE_CREATE_INFO = VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO,
  E_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO,
  E_EXTERNAL_SEMAPHORE_PROPERTIES = VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES,
  E_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES,
  E_DESCRIPTOR_SET_LAYOUT_SUPPORT = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT,
  E_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES,
  E_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES,
  E_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES,
  E_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES,
  E_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES,
  E_IMAGE_FORMAT_LIST_CREATE_INFO = VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO,
  E_ATTACHMENT_DESCRIPTION_2 = VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2,
  E_ATTACHMENT_REFERENCE_2 = VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2,
  E_SUBPASS_DESCRIPTION_2 = VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2,
  E_SUBPASS_DEPENDENCY_2 = VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2,
  E_RENDER_PASS_CREATE_INFO_2 = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2,
  E_SUBPASS_BEGIN_INFO = VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO,
  E_SUBPASS_END_INFO = VK_STRUCTURE_TYPE_SUBPASS_END_INFO,
  E_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES,
  E_PHYSICAL_DEVICE_DRIVER_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES,
  E_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES,
  E_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES,
  E_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES,
  E_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO,
  E_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES,
  E_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES,
  E_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO,
  E_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT,
  E_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES,
  E_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE = VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE,
  E_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES,
  E_IMAGE_STENCIL_USAGE_CREATE_INFO = VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO,
  E_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES,
  E_SAMPLER_REDUCTION_MODE_CREATE_INFO = VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO,
  E_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES,
  E_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES,
  E_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO = VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO,
  E_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO = VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO,
  E_RENDER_PASS_ATTACHMENT_BEGIN_INFO = VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO,
  E_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES,
  E_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES,
  E_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES,
  E_ATTACHMENT_REFERENCE_STENCIL_LAYOUT = VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT,
  E_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT = VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT,
  E_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES,
  E_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES,
  E_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES,
  E_SEMAPHORE_TYPE_CREATE_INFO = VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO,
  E_TIMELINE_SEMAPHORE_SUBMIT_INFO = VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO,
  E_SEMAPHORE_WAIT_INFO = VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO,
  E_SEMAPHORE_SIGNAL_INFO = VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO,
  E_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES,
  E_BUFFER_DEVICE_ADDRESS_INFO = VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO,
  E_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO = VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO,
  E_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO = VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO,
  E_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO = VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO,
  E_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES,
  E_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES,
  E_PIPELINE_CREATION_FEEDBACK_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO,
  E_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES,
  E_PHYSICAL_DEVICE_TOOL_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES,
  E_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES =
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES,
  E_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES,
  E_DEVICE_PRIVATE_DATA_CREATE_INFO = VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO,
  E_PRIVATE_DATA_SLOT_CREATE_INFO = VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO,
  E_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES,
  E_MEMORY_BARRIER_2 = VK_STRUCTURE_TYPE_MEMORY_BARRIER_2,
  E_BUFFER_MEMORY_BARRIER_2 = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2,
  E_IMAGE_MEMORY_BARRIER_2 = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2,
  E_DEPENDENCY_INFO = VK_STRUCTURE_TYPE_DEPENDENCY_INFO,
  E_SUBMIT_INFO_2 = VK_STRUCTURE_TYPE_SUBMIT_INFO_2,
  E_SEMAPHORE_SUBMIT_INFO = VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO,
  E_COMMAND_BUFFER_SUBMIT_INFO = VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO,
  E_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES,
  E_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES,
  E_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES,
  E_COPY_BUFFER_INFO_2 = VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2,
  E_COPY_IMAGE_INFO_2 = VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2,
  E_COPY_BUFFER_TO_IMAGE_INFO_2 = VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2,
  E_COPY_IMAGE_TO_BUFFER_INFO_2 = VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2,
  E_BLIT_IMAGE_INFO_2 = VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2,
  E_RESOLVE_IMAGE_INFO_2 = VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2,
  E_BUFFER_COPY_2 = VK_STRUCTURE_TYPE_BUFFER_COPY_2,
  E_IMAGE_COPY_2 = VK_STRUCTURE_TYPE_IMAGE_COPY_2,
  E_IMAGE_BLIT_2 = VK_STRUCTURE_TYPE_IMAGE_BLIT_2,
  E_BUFFER_IMAGE_COPY_2 = VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2,
  E_IMAGE_RESOLVE_2 = VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2,
  E_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES,
  E_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO,
  E_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES,
  E_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES,
  E_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES,
  E_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK,
  E_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO,
  E_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES,
  E_RENDERING_INFO = VK_STRUCTURE_TYPE_RENDERING_INFO,
  E_RENDERING_ATTACHMENT_INFO = VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO,
  E_PIPELINE_RENDERING_CREATE_INFO = VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO,
  E_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES,
  E_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO,
  E_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES,
  E_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES,
  E_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES,
  E_FORMAT_PROPERTIES_3 = VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3,
  E_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES,
  E_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES,
  E_DEVICE_BUFFER_MEMORY_REQUIREMENTS = VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS,
  E_DEVICE_IMAGE_MEMORY_REQUIREMENTS = VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS
};

enum class SubpassContents {
  E_INLINE = VK_SUBPASS_CONTENTS_INLINE,
  E_SECONDARY_COMMAND_BUFFERS = VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS
};

enum class Result {
  E_SUCCESS = VK_SUCCESS,
  E_NOT_READY = VK_NOT_READY,
  E_TIMEOUT = VK_TIMEOUT,
  E_EVENT_SET = VK_EVENT_SET,
  E_EVENT_RESET = VK_EVENT_RESET,
  E_INCOMPLETE = VK_INCOMPLETE,
  E_ERROR_OUT_OF_HOST_MEMORY = VK_ERROR_OUT_OF_HOST_MEMORY,
  E_ERROR_OUT_OF_DEVICE_MEMORY = VK_ERROR_OUT_OF_DEVICE_MEMORY,
  E_ERROR_INITIALIZATION_FAILED = VK_ERROR_INITIALIZATION_FAILED,
  E_ERROR_DEVICE_LOST = VK_ERROR_DEVICE_LOST,
  E_ERROR_MEMORY_MAP_FAILED = VK_ERROR_MEMORY_MAP_FAILED,
  E_ERROR_LAYER_NOT_PRESENT = VK_ERROR_LAYER_NOT_PRESENT,
  E_ERROR_EXTENSION_NOT_PRESENT = VK_ERROR_EXTENSION_NOT_PRESENT,
  E_ERROR_FEATURE_NOT_PRESENT = VK_ERROR_FEATURE_NOT_PRESENT,
  E_ERROR_INCOMPATIBLE_DRIVER = VK_ERROR_INCOMPATIBLE_DRIVER,
  E_ERROR_TOO_MANY_OBJECTS = VK_ERROR_TOO_MANY_OBJECTS,
  E_ERROR_FORMAT_NOT_SUPPORTED = VK_ERROR_FORMAT_NOT_SUPPORTED,
  E_ERROR_FRAGMENTED_POOL = VK_ERROR_FRAGMENTED_POOL,
  E_ERROR_UNKNOWN = VK_ERROR_UNKNOWN,
  E_ERROR_OUT_OF_POOL_MEMORY = VK_ERROR_OUT_OF_POOL_MEMORY,
  E_ERROR_INVALID_EXTERNAL_HANDLE = VK_ERROR_INVALID_EXTERNAL_HANDLE,
  E_ERROR_FRAGMENTATION = VK_ERROR_FRAGMENTATION,
  E_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS = VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS,
  E_PIPELINE_COMPILE_REQUIRED = VK_PIPELINE_COMPILE_REQUIRED
};

enum class DynamicState {
  E_VIEWPORT = VK_DYNAMIC_STATE_VIEWPORT,
  E_SCISSOR = VK_DYNAMIC_STATE_SCISSOR,
  E_LINE_WIDTH = VK_DYNAMIC_STATE_LINE_WIDTH,
  E_DEPTH_BIAS = VK_DYNAMIC_STATE_DEPTH_BIAS,
  E_BLEND_CONSTANTS = VK_DYNAMIC_STATE_BLEND_CONSTANTS,
  E_DEPTH_BOUNDS = VK_DYNAMIC_STATE_DEPTH_BOUNDS,
  E_STENCIL_COMPARE_MASK = VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK,
  E_STENCIL_WRITE_MASK = VK_DYNAMIC_STATE_STENCIL_WRITE_MASK,
  E_STENCIL_REFERENCE = VK_DYNAMIC_STATE_STENCIL_REFERENCE,
  E_CULL_MODE = VK_DYNAMIC_STATE_CULL_MODE,
  E_FRONT_FACE = VK_DYNAMIC_STATE_FRONT_FACE,
  E_PRIMITIVE_TOPOLOGY = VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY,
  E_VIEWPORT_WITH_COUNT = VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT,
  E_SCISSOR_WITH_COUNT = VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT,
  E_VERTEX_INPUT_BINDING_STRIDE = VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE,
  E_DEPTH_TEST_ENABLE = VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE,
  E_DEPTH_WRITE_ENABLE = VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE,
  E_DEPTH_COMPARE_OP = VK_DYNAMIC_STATE_DEPTH_COMPARE_OP,
  E_DEPTH_BOUNDS_TEST_ENABLE = VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE,
  E_STENCIL_TEST_ENABLE = VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE,
  E_STENCIL_OP = VK_DYNAMIC_STATE_STENCIL_OP,
  E_RASTERIZER_DISCARD_ENABLE = VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE,
  E_DEPTH_BIAS_ENABLE = VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE,
  E_PRIMITIVE_RESTART_ENABLE = VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE
};

enum class DescriptorUpdateTemplateType {
  E_DESCRIPTOR_SET = VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET
};

enum class ObjectType {
  E_UNKNOWN = VK_OBJECT_TYPE_UNKNOWN,
  E_INSTANCE = VK_OBJECT_TYPE_INSTANCE,
  E_PHYSICAL_DEVICE = VK_OBJECT_TYPE_PHYSICAL_DEVICE,
  E_DEVICE = VK_OBJECT_TYPE_DEVICE,
  E_QUEUE = VK_OBJECT_TYPE_QUEUE,
  E_SEMAPHORE = VK_OBJECT_TYPE_SEMAPHORE,
  E_COMMAND_BUFFER = VK_OBJECT_TYPE_COMMAND_BUFFER,
  E_FENCE = VK_OBJECT_TYPE_FENCE,
  E_DEVICE_MEMORY = VK_OBJECT_TYPE_DEVICE_MEMORY,
  E_BUFFER = VK_OBJECT_TYPE_BUFFER,
  E_IMAGE = VK_OBJECT_TYPE_IMAGE,
  E_EVENT = VK_OBJECT_TYPE_EVENT,
  E_QUERY_POOL = VK_OBJECT_TYPE_QUERY_POOL,
  E_BUFFER_VIEW = VK_OBJECT_TYPE_BUFFER_VIEW,
  E_IMAGE_VIEW = VK_OBJECT_TYPE_IMAGE_VIEW,
  E_SHADER_MODULE = VK_OBJECT_TYPE_SHADER_MODULE,
  E_PIPELINE_CACHE = VK_OBJECT_TYPE_PIPELINE_CACHE,
  E_PIPELINE_LAYOUT = VK_OBJECT_TYPE_PIPELINE_LAYOUT,
  E_RENDER_PASS = VK_OBJECT_TYPE_RENDER_PASS,
  E_PIPELINE = VK_OBJECT_TYPE_PIPELINE,
  E_DESCRIPTOR_SET_LAYOUT = VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT,
  E_SAMPLER = VK_OBJECT_TYPE_SAMPLER,
  E_DESCRIPTOR_POOL = VK_OBJECT_TYPE_DESCRIPTOR_POOL,
  E_DESCRIPTOR_SET = VK_OBJECT_TYPE_DESCRIPTOR_SET,
  E_FRAMEBUFFER = VK_OBJECT_TYPE_FRAMEBUFFER,
  E_COMMAND_POOL = VK_OBJECT_TYPE_COMMAND_POOL,
  E_SAMPLER_YCBCR_CONVERSION = VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION,
  E_DESCRIPTOR_UPDATE_TEMPLATE = VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE,
  E_PRIVATE_DATA_SLOT = VK_OBJECT_TYPE_PRIVATE_DATA_SLOT
};

enum class RayTracingInvocationReorderMode {
  E_NONE_NV = VK_RAY_TRACING_INVOCATION_REORDER_MODE_NONE_NV,
  E_REORDER_NV = VK_RAY_TRACING_INVOCATION_REORDER_MODE_REORDER_NV
};

enum class DirectDriverLoadingMode {
  E_EXCLUSIVE_LUNARG = VK_DIRECT_DRIVER_LOADING_MODE_EXCLUSIVE_LUNARG,
  E_INCLUSIVE_LUNARG = VK_DIRECT_DRIVER_LOADING_MODE_INCLUSIVE_LUNARG
};

enum class QueueMaskBits : VkQueueFlags {
  E_GRAPHICS_BIT = VK_QUEUE_GRAPHICS_BIT,
  E_COMPUTE_BIT = VK_QUEUE_COMPUTE_BIT,
  E_TRANSFER_BIT = VK_QUEUE_TRANSFER_BIT,
  E_SPARSE_BINDING_BIT = VK_QUEUE_SPARSE_BINDING_BIT,
  E_PROTECTED_BIT = VK_QUEUE_PROTECTED_BIT
};

enum class CullModeMaskBits : VkCullModeFlags {
  E_NONE = VK_CULL_MODE_NONE,
  E_FRONT_BIT = VK_CULL_MODE_FRONT_BIT,
  E_BACK_BIT = VK_CULL_MODE_BACK_BIT,
  E_FRONT_AND_BACK = VK_CULL_MODE_FRONT_AND_BACK
};

enum class MemoryPropertyMaskBits : VkMemoryPropertyFlags {
  E_DEVICE_LOCAL_BIT = VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT,
  E_HOST_VISIBLE_BIT = VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT,
  E_HOST_COHERENT_BIT = VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,
  E_HOST_CACHED_BIT = VK_MEMORY_PROPERTY_HOST_CACHED_BIT,
  E_LAZILY_ALLOCATED_BIT = VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT,
  E_PROTECTED_BIT = VK_MEMORY_PROPERTY_PROTECTED_BIT
};

enum class MemoryHeapMaskBits : VkMemoryHeapFlags {
  E_DEVICE_LOCAL_BIT = VK_MEMORY_HEAP_DEVICE_LOCAL_BIT,
  E_MULTI_INSTANCE_BIT = VK_MEMORY_HEAP_MULTI_INSTANCE_BIT
};

enum class AccessMaskBits : VkAccessFlags {
  E_INDIRECT_COMMAND_READ_BIT = VK_ACCESS_INDIRECT_COMMAND_READ_BIT,
  E_INDEX_READ_BIT = VK_ACCESS_INDEX_READ_BIT,
  E_VERTEX_ATTRIBUTE_READ_BIT = VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT,
  E_UNIFORM_READ_BIT = VK_ACCESS_UNIFORM_READ_BIT,
  E_INPUT_ATTACHMENT_READ_BIT = VK_ACCESS_INPUT_ATTACHMENT_READ_BIT,
  E_SHADER_READ_BIT = VK_ACCESS_SHADER_READ_BIT,
  E_SHADER_WRITE_BIT = VK_ACCESS_SHADER_WRITE_BIT,
  E_COLOR_ATTACHMENT_READ_BIT = VK_ACCESS_COLOR_ATTACHMENT_READ_BIT,
  E_COLOR_ATTACHMENT_WRITE_BIT = VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT,
  E_DEPTH_STENCIL_ATTACHMENT_READ_BIT = VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT,
  E_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT,
  E_TRANSFER_READ_BIT = VK_ACCESS_TRANSFER_READ_BIT,
  E_TRANSFER_WRITE_BIT = VK_ACCESS_TRANSFER_WRITE_BIT,
  E_HOST_READ_BIT = VK_ACCESS_HOST_READ_BIT,
  E_HOST_WRITE_BIT = VK_ACCESS_HOST_WRITE_BIT,
  E_MEMORY_READ_BIT = VK_ACCESS_MEMORY_READ_BIT,
  E_MEMORY_WRITE_BIT = VK_ACCESS_MEMORY_WRITE_BIT,
  E_NONE = VK_ACCESS_NONE
};

enum class BufferUsageMaskBits : VkBufferUsageFlags {
  E_TRANSFER_SRC_BIT = VK_BUFFER_USAGE_TRANSFER_SRC_BIT,
  E_TRANSFER_DST_BIT = VK_BUFFER_USAGE_TRANSFER_DST_BIT,
  E_UNIFORM_TEXEL_BUFFER_BIT = VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT,
  E_STORAGE_TEXEL_BUFFER_BIT = VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT,
  E_UNIFORM_BUFFER_BIT = VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT,
  E_STORAGE_BUFFER_BIT = VK_BUFFER_USAGE_STORAGE_BUFFER_BIT,
  E_INDEX_BUFFER_BIT = VK_BUFFER_USAGE_INDEX_BUFFER_BIT,
  E_VERTEX_BUFFER_BIT = VK_BUFFER_USAGE_VERTEX_BUFFER_BIT,
  E_INDIRECT_BUFFER_BIT = VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT,
  E_SHADER_DEVICE_ADDRESS_BIT = VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT
};

enum class BufferUsageMaskBits2 : VkBufferUsageFlags2KHR {
  E_TRANSFER_SRC_BIT_KHR = VK_BUFFER_USAGE_2_TRANSFER_SRC_BIT_KHR,
  E_TRANSFER_DST_BIT_KHR = VK_BUFFER_USAGE_2_TRANSFER_DST_BIT_KHR,
  E_UNIFORM_TEXEL_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR,
  E_STORAGE_TEXEL_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_STORAGE_TEXEL_BUFFER_BIT_KHR,
  E_UNIFORM_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_UNIFORM_BUFFER_BIT_KHR,
  E_STORAGE_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_STORAGE_BUFFER_BIT_KHR,
  E_INDEX_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_INDEX_BUFFER_BIT_KHR,
  E_VERTEX_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_VERTEX_BUFFER_BIT_KHR,
  E_INDIRECT_BUFFER_BIT_KHR = VK_BUFFER_USAGE_2_INDIRECT_BUFFER_BIT_KHR
};

enum class BufferCreateMaskBits : VkBufferCreateFlags {
  E_SPARSE_BINDING_BIT = VK_BUFFER_CREATE_SPARSE_BINDING_BIT,
  E_SPARSE_RESIDENCY_BIT = VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT,
  E_SPARSE_ALIASED_BIT = VK_BUFFER_CREATE_SPARSE_ALIASED_BIT,
  E_PROTECTED_BIT = VK_BUFFER_CREATE_PROTECTED_BIT,
  E_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT = VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT
};

enum class ShaderStageMaskBits : VkShaderStageFlags {
  E_VERTEX_BIT = VK_SHADER_STAGE_VERTEX_BIT,
  E_TESSELLATION_CONTROL_BIT = VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT,
  E_TESSELLATION_EVALUATION_BIT = VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT,
  E_GEOMETRY_BIT = VK_SHADER_STAGE_GEOMETRY_BIT,
  E_FRAGMENT_BIT = VK_SHADER_STAGE_FRAGMENT_BIT,
  E_COMPUTE_BIT = VK_SHADER_STAGE_COMPUTE_BIT,
  E_ALL_GRAPHICS = VK_SHADER_STAGE_ALL_GRAPHICS,
  E_ALL = VK_SHADER_STAGE_ALL
};

enum class ImageUsageMaskBits : VkImageUsageFlags {
  E_TRANSFER_SRC_BIT = VK_IMAGE_USAGE_TRANSFER_SRC_BIT,
  E_TRANSFER_DST_BIT = VK_IMAGE_USAGE_TRANSFER_DST_BIT,
  E_SAMPLED_BIT = VK_IMAGE_USAGE_SAMPLED_BIT,
  E_STORAGE_BIT = VK_IMAGE_USAGE_STORAGE_BIT,
  E_COLOR_ATTACHMENT_BIT = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT,
  E_DEPTH_STENCIL_ATTACHMENT_BIT = VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT,
  E_TRANSIENT_ATTACHMENT_BIT = VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT,
  E_INPUT_ATTACHMENT_BIT = VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT
};

enum class ImageCreateMaskBits : VkImageCreateFlags {
  E_SPARSE_BINDING_BIT = VK_IMAGE_CREATE_SPARSE_BINDING_BIT,
  E_SPARSE_RESIDENCY_BIT = VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT,
  E_SPARSE_ALIASED_BIT = VK_IMAGE_CREATE_SPARSE_ALIASED_BIT,
  E_MUTABLE_FORMAT_BIT = VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT,
  E_CUBE_COMPATIBLE_BIT = VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT,
  E_ALIAS_BIT = VK_IMAGE_CREATE_ALIAS_BIT,
  E_SPLIT_INSTANCE_BIND_REGIONS_BIT = VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT,
  E_2D_ARRAY_COMPATIBLE_BIT = VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT,
  E_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT = VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT,
  E_EXTENDED_USAGE_BIT = VK_IMAGE_CREATE_EXTENDED_USAGE_BIT,
  E_PROTECTED_BIT = VK_IMAGE_CREATE_PROTECTED_BIT,
  E_DISJOINT_BIT = VK_IMAGE_CREATE_DISJOINT_BIT
};

enum class PipelineCreateMaskBits : VkPipelineCreateFlags {
  E_DISABLE_OPTIMIZATION_BIT = VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT,
  E_ALLOW_DERIVATIVES_BIT = VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT,
  E_DERIVATIVE_BIT = VK_PIPELINE_CREATE_DERIVATIVE_BIT,
  E_VIEW_INDEX_FROM_DEVICE_INDEX_BIT = VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT,
  E_DISPATCH_BASE_BIT = VK_PIPELINE_CREATE_DISPATCH_BASE_BIT,
  E_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT = VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT,
  E_EARLY_RETURN_ON_FAILURE_BIT = VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT
};

enum class PipelineCreateMaskBits2 : VkPipelineCreateFlags2KHR {
  E_DISABLE_OPTIMIZATION_BIT_KHR = VK_PIPELINE_CREATE_2_DISABLE_OPTIMIZATION_BIT_KHR,
  E_ALLOW_DERIVATIVES_BIT_KHR = VK_PIPELINE_CREATE_2_ALLOW_DERIVATIVES_BIT_KHR,
  E_DERIVATIVE_BIT_KHR = VK_PIPELINE_CREATE_2_DERIVATIVE_BIT_KHR
};

enum class ColorComponentMaskBits : VkColorComponentFlags {
  E_R_BIT = VK_COLOR_COMPONENT_R_BIT,
  E_G_BIT = VK_COLOR_COMPONENT_G_BIT,
  E_B_BIT = VK_COLOR_COMPONENT_B_BIT,
  E_A_BIT = VK_COLOR_COMPONENT_A_BIT
};

enum class FenceCreateMaskBits : VkFenceCreateFlags {
  E_SIGNALED_BIT = VK_FENCE_CREATE_SIGNALED_BIT
};

enum class FormatFeatureMaskBits : VkFormatFeatureFlags {
  E_SAMPLED_IMAGE_BIT = VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT,
  E_STORAGE_IMAGE_BIT = VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT,
  E_STORAGE_IMAGE_ATOMIC_BIT = VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT,
  E_UNIFORM_TEXEL_BUFFER_BIT = VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT,
  E_STORAGE_TEXEL_BUFFER_BIT = VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT,
  E_STORAGE_TEXEL_BUFFER_ATOMIC_BIT = VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT,
  E_VERTEX_BUFFER_BIT = VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT,
  E_COLOR_ATTACHMENT_BIT = VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT,
  E_COLOR_ATTACHMENT_BLEND_BIT = VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT,
  E_DEPTH_STENCIL_ATTACHMENT_BIT = VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT,
  E_BLIT_SRC_BIT = VK_FORMAT_FEATURE_BLIT_SRC_BIT,
  E_BLIT_DST_BIT = VK_FORMAT_FEATURE_BLIT_DST_BIT,
  E_SAMPLED_IMAGE_FILTER_LINEAR_BIT = VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT,
  E_TRANSFER_SRC_BIT = VK_FORMAT_FEATURE_TRANSFER_SRC_BIT,
  E_TRANSFER_DST_BIT = VK_FORMAT_FEATURE_TRANSFER_DST_BIT,
  E_MIDPOINT_CHROMA_SAMPLES_BIT = VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT,
  E_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT,
  E_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT =
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT,
  E_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT =
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT,
  E_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT =
    VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT,
  E_DISJOINT_BIT = VK_FORMAT_FEATURE_DISJOINT_BIT,
  E_COSITED_CHROMA_SAMPLES_BIT = VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT,
  E_SAMPLED_IMAGE_FILTER_MINMAX_BIT = VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT
};

enum class QueryControlMaskBits : VkQueryControlFlags {
  E_PRECISE_BIT = VK_QUERY_CONTROL_PRECISE_BIT
};

enum class QueryResultMaskBits : VkQueryResultFlags {
  E_64_BIT = VK_QUERY_RESULT_64_BIT,
  E_WAIT_BIT = VK_QUERY_RESULT_WAIT_BIT,
  E_WITH_AVAILABILITY_BIT = VK_QUERY_RESULT_WITH_AVAILABILITY_BIT,
  E_PARTIAL_BIT = VK_QUERY_RESULT_PARTIAL_BIT
};

enum class CommandBufferUsageMaskBits : VkCommandBufferUsageFlags {
  E_ONE_TIME_SUBMIT_BIT = VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT,
  E_RENDER_PASS_CONTINUE_BIT = VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT,
  E_SIMULTANEOUS_USE_BIT = VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT
};

enum class QueryPipelineStatisticMaskBits : VkQueryPipelineStatisticFlags {
  E_INPUT_ASSEMBLY_VERTICES_BIT = VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT,
  E_INPUT_ASSEMBLY_PRIMITIVES_BIT = VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT,
  E_VERTEX_SHADER_INVOCATIONS_BIT = VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT,
  E_GEOMETRY_SHADER_INVOCATIONS_BIT = VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT,
  E_GEOMETRY_SHADER_PRIMITIVES_BIT = VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT,
  E_CLIPPING_INVOCATIONS_BIT = VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT,
  E_CLIPPING_PRIMITIVES_BIT = VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT,
  E_FRAGMENT_SHADER_INVOCATIONS_BIT = VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT,
  E_TESSELLATION_CONTROL_SHADER_PATCHES_BIT = VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT,
  E_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT = VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT,
  E_COMPUTE_SHADER_INVOCATIONS_BIT = VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT
};

enum class ImageAspectMaskBits : VkImageAspectFlags {
  E_COLOR_BIT = VK_IMAGE_ASPECT_COLOR_BIT,
  E_DEPTH_BIT = VK_IMAGE_ASPECT_DEPTH_BIT,
  E_STENCIL_BIT = VK_IMAGE_ASPECT_STENCIL_BIT,
  E_METADATA_BIT = VK_IMAGE_ASPECT_METADATA_BIT,
  E_PLANE_0_BIT = VK_IMAGE_ASPECT_PLANE_0_BIT,
  E_PLANE_1_BIT = VK_IMAGE_ASPECT_PLANE_1_BIT,
  E_PLANE_2_BIT = VK_IMAGE_ASPECT_PLANE_2_BIT,
  E_NONE = VK_IMAGE_ASPECT_NONE
};

enum class SparseImageFormatMaskBits : VkSparseImageFormatFlags {
  E_SINGLE_MIPTAIL_BIT = VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT,
  E_ALIGNED_MIP_SIZE_BIT = VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT,
  E_NONSTANDARD_BLOCK_SIZE_BIT = VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT
};

enum class SparseMemoryBindMaskBits : VkSparseMemoryBindFlags {
  E_METADATA_BIT = VK_SPARSE_MEMORY_BIND_METADATA_BIT
};

enum class PipelineStageMaskBits : VkPipelineStageFlags {
  E_TOP_OF_PIPE_BIT = VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT,
  E_DRAW_INDIRECT_BIT = VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT,
  E_VERTEX_INPUT_BIT = VK_PIPELINE_STAGE_VERTEX_INPUT_BIT,
  E_VERTEX_SHADER_BIT = VK_PIPELINE_STAGE_VERTEX_SHADER_BIT,
  E_TESSELLATION_CONTROL_SHADER_BIT = VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT,
  E_TESSELLATION_EVALUATION_SHADER_BIT = VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT,
  E_GEOMETRY_SHADER_BIT = VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT,
  E_FRAGMENT_SHADER_BIT = VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT,
  E_EARLY_FRAGMENT_TESTS_BIT = VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT,
  E_LATE_FRAGMENT_TESTS_BIT = VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT,
  E_COLOR_ATTACHMENT_OUTPUT_BIT = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT,
  E_COMPUTE_SHADER_BIT = VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT,
  E_TRANSFER_BIT = VK_PIPELINE_STAGE_TRANSFER_BIT,
  E_BOTTOM_OF_PIPE_BIT = VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT,
  E_HOST_BIT = VK_PIPELINE_STAGE_HOST_BIT,
  E_ALL_GRAPHICS_BIT = VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT,
  E_ALL_COMMANDS_BIT = VK_PIPELINE_STAGE_ALL_COMMANDS_BIT,
  E_NONE = VK_PIPELINE_STAGE_NONE
};

enum class CommandPoolCreateMaskBits : VkCommandPoolCreateFlags {
  E_TRANSIENT_BIT = VK_COMMAND_POOL_CREATE_TRANSIENT_BIT,
  E_RESET_COMMAND_BUFFER_BIT = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT,
  E_PROTECTED_BIT = VK_COMMAND_POOL_CREATE_PROTECTED_BIT
};

enum class CommandPoolResetMaskBits : VkCommandPoolResetFlags {
  E_RELEASE_RESOURCES_BIT = VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT
};

enum class CommandBufferResetMaskBits : VkCommandBufferResetFlags {
  E_RELEASE_RESOURCES_BIT = VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT
};

enum class SampleCountMaskBits : VkSampleCountFlags {
  E_1_BIT = VK_SAMPLE_COUNT_1_BIT,
  E_2_BIT = VK_SAMPLE_COUNT_2_BIT,
  E_4_BIT = VK_SAMPLE_COUNT_4_BIT,
  E_8_BIT = VK_SAMPLE_COUNT_8_BIT,
  E_16_BIT = VK_SAMPLE_COUNT_16_BIT,
  E_32_BIT = VK_SAMPLE_COUNT_32_BIT,
  E_64_BIT = VK_SAMPLE_COUNT_64_BIT
};

enum class AttachmentDescriptionMaskBits : VkAttachmentDescriptionFlags {
  E_MAY_ALIAS_BIT = VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT
};

enum class StencilFaceMaskBits : VkStencilFaceFlags {
  E_FRONT_BIT = VK_STENCIL_FACE_FRONT_BIT,
  E_BACK_BIT = VK_STENCIL_FACE_BACK_BIT,
  E_FRONT_AND_BACK = VK_STENCIL_FACE_FRONT_AND_BACK
};

enum class DescriptorPoolCreateMaskBits : VkDescriptorPoolCreateFlags {
  E_FREE_DESCRIPTOR_SET_BIT = VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT,
  E_UPDATE_AFTER_BIND_BIT = VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT
};

enum class DependencyMaskBits : VkDependencyFlags {
  E_BY_REGION_BIT = VK_DEPENDENCY_BY_REGION_BIT,
  E_DEVICE_GROUP_BIT = VK_DEPENDENCY_DEVICE_GROUP_BIT,
  E_VIEW_LOCAL_BIT = VK_DEPENDENCY_VIEW_LOCAL_BIT
};

enum class SemaphoreType {
  E_BINARY = VK_SEMAPHORE_TYPE_BINARY,
  E_TIMELINE = VK_SEMAPHORE_TYPE_TIMELINE
};

enum class SemaphoreWaitMaskBits : VkSemaphoreWaitFlags {
  E_ANY_BIT = VK_SEMAPHORE_WAIT_ANY_BIT
};

enum class PresentMode {
  E_IMMEDIATE_KHR = VK_PRESENT_MODE_IMMEDIATE_KHR,
  E_MAILBOX_KHR = VK_PRESENT_MODE_MAILBOX_KHR,
  E_FIFO_KHR = VK_PRESENT_MODE_FIFO_KHR,
  E_FIFO_RELAXED_KHR = VK_PRESENT_MODE_FIFO_RELAXED_KHR
};

enum class ColorSpace {
  E_SRGB_NONLINEAR_KHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR
};

enum class DisplayPlaneAlphaMaskBits : VkDisplayPlaneAlphaFlagsKHR {
  E_OPAQUE_BIT_KHR = VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR,
  E_GLOBAL_BIT_KHR = VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR,
  E_PER_PIXEL_BIT_KHR = VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR,
  E_PER_PIXEL_PREMULTIPLIED_BIT_KHR = VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR
};

enum class CompositeAlphaMaskBits : VkCompositeAlphaFlagsKHR {
  E_OPAQUE_BIT_KHR = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR,
  E_PRE_MULTIPLIED_BIT_KHR = VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR,
  E_POST_MULTIPLIED_BIT_KHR = VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR,
  E_INHERIT_BIT_KHR = VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR
};

enum class SurfaceTransformMaskBits : VkSurfaceTransformFlagsKHR {
  E_IDENTITY_BIT_KHR = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR,
  E_ROTATE_90_BIT_KHR = VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR,
  E_ROTATE_180_BIT_KHR = VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR,
  E_ROTATE_270_BIT_KHR = VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR,
  E_HORIZONTAL_MIRROR_BIT_KHR = VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR,
  E_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR = VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR,
  E_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR = VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR,
  E_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR = VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR,
  E_INHERIT_BIT_KHR = VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR
};

enum class TimeDomain {
  E_DEVICE_KHR = VK_TIME_DOMAIN_DEVICE_KHR,
  E_CLOCK_MONOTONIC_KHR = VK_TIME_DOMAIN_CLOCK_MONOTONIC_KHR,
  E_CLOCK_MONOTONIC_RAW_KHR = VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_KHR,
  E_QUERY_PERFORMANCE_COUNTER_KHR = VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_KHR
};

enum class DebugReportMaskBits : VkDebugReportFlagsEXT {
  E_INFORMATION_BIT_EXT = VK_DEBUG_REPORT_INFORMATION_BIT_EXT,
  E_WARNING_BIT_EXT = VK_DEBUG_REPORT_WARNING_BIT_EXT,
  E_PERFORMANCE_WARNING_BIT_EXT = VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT,
  E_ERROR_BIT_EXT = VK_DEBUG_REPORT_ERROR_BIT_EXT,
  E_DEBUG_BIT_EXT = VK_DEBUG_REPORT_DEBUG_BIT_EXT
};

enum class DebugReportObjectType {
  E_UNKNOWN_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT,
  E_INSTANCE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT,
  E_PHYSICAL_DEVICE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT,
  E_DEVICE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT,
  E_QUEUE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT,
  E_SEMAPHORE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT,
  E_COMMAND_BUFFER_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT,
  E_FENCE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT,
  E_DEVICE_MEMORY_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT,
  E_BUFFER_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT,
  E_IMAGE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT,
  E_EVENT_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT,
  E_QUERY_POOL_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT,
  E_BUFFER_VIEW_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT,
  E_IMAGE_VIEW_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT,
  E_SHADER_MODULE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT,
  E_PIPELINE_CACHE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT,
  E_PIPELINE_LAYOUT_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT,
  E_RENDER_PASS_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT,
  E_PIPELINE_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT,
  E_DESCRIPTOR_SET_LAYOUT_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT,
  E_SAMPLER_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT,
  E_DESCRIPTOR_POOL_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT,
  E_DESCRIPTOR_SET_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT,
  E_FRAMEBUFFER_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT,
  E_COMMAND_POOL_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT,
  E_SURFACE_KHR_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT,
  E_SWAPCHAIN_KHR_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT,
  E_DEBUG_REPORT_CALLBACK_EXT_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT,
  E_DISPLAY_KHR_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT,
  E_DISPLAY_MODE_KHR_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT,
  E_VALIDATION_CACHE_EXT_EXT = VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT
};

enum class DeviceMemoryReportEventType {
  E_ALLOCATE_EXT = VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATE_EXT,
  E_FREE_EXT = VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_FREE_EXT,
  E_IMPORT_EXT = VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_IMPORT_EXT,
  E_UNIMPORT_EXT = VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_UNIMPORT_EXT,
  E_ALLOCATION_FAILED_EXT = VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATION_FAILED_EXT
};

enum class RasterizationOrder {
  E_STRICT_AMD = VK_RASTERIZATION_ORDER_STRICT_AMD,
  E_RELAXED_AMD = VK_RASTERIZATION_ORDER_RELAXED_AMD
};

enum class ValidationCheck {
  E_ALL_EXT = VK_VALIDATION_CHECK_ALL_EXT,
  E_SHADERS_EXT = VK_VALIDATION_CHECK_SHADERS_EXT
};

enum class ValidationFeatureEnable {
  E_GPU_ASSISTED_EXT = VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT,
  E_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT = VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT,
  E_BEST_PRACTICES_EXT = VK_VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT,
  E_DEBUG_PRINTF_EXT = VK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT,
  E_SYNCHRONIZATION_VALIDATION_EXT = VK_VALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT
};

enum class ValidationFeatureDisable {
  E_ALL_EXT = VK_VALIDATION_FEATURE_DISABLE_ALL_EXT,
  E_SHADERS_EXT = VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT,
  E_THREAD_SAFETY_EXT = VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT,
  E_API_PARAMETERS_EXT = VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT,
  E_OBJECT_LIFETIMES_EXT = VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT,
  E_CORE_CHECKS_EXT = VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT,
  E_UNIQUE_HANDLES_EXT = VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT,
  E_SHADER_VALIDATION_CACHE_EXT = VK_VALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT
};

enum class LayerSettingType {
  E_BOOL32_EXT = VK_LAYER_SETTING_TYPE_BOOL32_EXT,
  E_INT32_EXT = VK_LAYER_SETTING_TYPE_INT32_EXT,
  E_INT64_EXT = VK_LAYER_SETTING_TYPE_INT64_EXT,
  E_UINT32_EXT = VK_LAYER_SETTING_TYPE_UINT32_EXT,
  E_UINT64_EXT = VK_LAYER_SETTING_TYPE_UINT64_EXT,
  E_FLOAT32_EXT = VK_LAYER_SETTING_TYPE_FLOAT32_EXT,
  E_FLOAT64_EXT = VK_LAYER_SETTING_TYPE_FLOAT64_EXT,
  E_STRING_EXT = VK_LAYER_SETTING_TYPE_STRING_EXT
};

enum class SubgroupFeatureMaskBits : VkSubgroupFeatureFlags {
  E_BASIC_BIT = VK_SUBGROUP_FEATURE_BASIC_BIT,
  E_VOTE_BIT = VK_SUBGROUP_FEATURE_VOTE_BIT,
  E_ARITHMETIC_BIT = VK_SUBGROUP_FEATURE_ARITHMETIC_BIT,
  E_BALLOT_BIT = VK_SUBGROUP_FEATURE_BALLOT_BIT,
  E_SHUFFLE_BIT = VK_SUBGROUP_FEATURE_SHUFFLE_BIT,
  E_SHUFFLE_RELATIVE_BIT = VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT,
  E_CLUSTERED_BIT = VK_SUBGROUP_FEATURE_CLUSTERED_BIT,
  E_QUAD_BIT = VK_SUBGROUP_FEATURE_QUAD_BIT
};

enum class IndirectCommandsLayoutUsageMaskBits : VkIndirectCommandsLayoutUsageFlagsNV {
  E_EXPLICIT_PREPROCESS_BIT_NV = VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NV,
  E_INDEXED_SEQUENCES_BIT_NV = VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV,
  E_UNORDERED_SEQUENCES_BIT_NV = VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV
};

enum class IndirectStateMaskBits : VkIndirectStateFlagsNV {
  E_FLAG_FRONTFACE_BIT_NV = VK_INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV
};

enum class IndirectCommandsTokenType {
  E_SHADER_GROUP_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NV,
  E_STATE_FLAGS_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NV,
  E_INDEX_BUFFER_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NV,
  E_VERTEX_BUFFER_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NV,
  E_PUSH_CONSTANT_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NV,
  E_DRAW_INDEXED_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NV,
  E_DRAW_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NV,
  E_DRAW_TASKS_NV = VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV
};

enum class ExternalMemoryHandleTypeMaskBits : VkExternalMemoryHandleTypeFlags {
  E_OPAQUE_FD_BIT = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT,
  E_OPAQUE_WIN32_BIT = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT,
  E_OPAQUE_WIN32_KMT_BIT = VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT,
  E_D3D11_TEXTURE_BIT = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT,
  E_D3D11_TEXTURE_KMT_BIT = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT,
  E_D3D12_HEAP_BIT = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT,
  E_D3D12_RESOURCE_BIT = VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT
};

enum class ExternalMemoryFeatureMaskBits : VkExternalMemoryFeatureFlags {
  E_DEDICATED_ONLY_BIT = VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT,
  E_EXPORTABLE_BIT = VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT,
  E_IMPORTABLE_BIT = VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT
};

enum class ExternalSemaphoreHandleTypeMaskBits : VkExternalSemaphoreHandleTypeFlags {
  E_OPAQUE_FD_BIT = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT,
  E_OPAQUE_WIN32_BIT = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT,
  E_OPAQUE_WIN32_KMT_BIT = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT,
  E_D3D12_FENCE_BIT = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT,
  E_D3D11_FENCE_BIT = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT,
  E_SYNC_FD_BIT = VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT
};

enum class ExternalSemaphoreFeatureMaskBits : VkExternalSemaphoreFeatureFlags {
  E_EXPORTABLE_BIT = VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT,
  E_IMPORTABLE_BIT = VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT
};

enum class SemaphoreImportMaskBits : VkSemaphoreImportFlags {
  E_TEMPORARY_BIT = VK_SEMAPHORE_IMPORT_TEMPORARY_BIT
};

enum class ExternalFenceHandleTypeMaskBits : VkExternalFenceHandleTypeFlags {
  E_OPAQUE_FD_BIT = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT,
  E_OPAQUE_WIN32_BIT = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT,
  E_OPAQUE_WIN32_KMT_BIT = VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT,
  E_SYNC_FD_BIT = VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT
};

enum class ExternalFenceFeatureMaskBits : VkExternalFenceFeatureFlags {
  E_EXPORTABLE_BIT = VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT,
  E_IMPORTABLE_BIT = VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT
};

enum class FenceImportMaskBits : VkFenceImportFlags {
  E_TEMPORARY_BIT = VK_FENCE_IMPORT_TEMPORARY_BIT
};

enum class SurfaceCounterMaskBits : VkSurfaceCounterFlagsEXT {
  E_VBLANK_BIT_EXT = VK_SURFACE_COUNTER_VBLANK_BIT_EXT
};

enum class DisplayPowerState {
  E_OFF_EXT = VK_DISPLAY_POWER_STATE_OFF_EXT,
  E_SUSPEND_EXT = VK_DISPLAY_POWER_STATE_SUSPEND_EXT,
  E_ON_EXT = VK_DISPLAY_POWER_STATE_ON_EXT
};

enum class DeviceEventType {
  E_DISPLAY_HOTPLUG_EXT = VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT
};

enum class DisplayEventType {
  E_FIRST_PIXEL_OUT_EXT = VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT
};

enum class PeerMemoryFeatureMaskBits : VkPeerMemoryFeatureFlags {
  E_COPY_SRC_BIT = VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT,
  E_COPY_DST_BIT = VK_PEER_MEMORY_FEATURE_COPY_DST_BIT,
  E_GENERIC_SRC_BIT = VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT,
  E_GENERIC_DST_BIT = VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT
};

enum class MemoryAllocateMaskBits : VkMemoryAllocateFlags {
  E_DEVICE_MASK_BIT = VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT,
  E_DEVICE_ADDRESS_BIT = VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT,
  E_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT = VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT
};

enum class DeviceGroupPresentModeMaskBits : VkDeviceGroupPresentModeFlagsKHR {
  E_LOCAL_BIT_KHR = VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR,
  E_REMOTE_BIT_KHR = VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR,
  E_SUM_BIT_KHR = VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR,
  E_LOCAL_MULTI_DEVICE_BIT_KHR = VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR
};

enum class ViewportCoordinateSwizzle {
  E_POSITIVE_X_NV = VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV,
  E_NEGATIVE_X_NV = VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV,
  E_POSITIVE_Y_NV = VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV,
  E_NEGATIVE_Y_NV = VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV,
  E_POSITIVE_Z_NV = VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV,
  E_NEGATIVE_Z_NV = VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV,
  E_POSITIVE_W_NV = VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV,
  E_NEGATIVE_W_NV = VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV
};

enum class DiscardRectangleMode {
  E_INCLUSIVE_EXT = VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT,
  E_EXCLUSIVE_EXT = VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT
};

enum class PointClippingBehavior {
  E_ALL_CLIP_PLANES = VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES,
  E_USER_CLIP_PLANES_ONLY = VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY
};

enum class SamplerReductionMode {
  E_WEIGHTED_AVERAGE = VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE,
  E_MIN = VK_SAMPLER_REDUCTION_MODE_MIN,
  E_MAX = VK_SAMPLER_REDUCTION_MODE_MAX
};

enum class TessellationDomainOrigin {
  E_UPPER_LEFT = VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT,
  E_LOWER_LEFT = VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT
};

enum class SamplerYcbcrModelConversion {
  E_RGB_IDENTITY = VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY,
  E_YCBCR_IDENTITY = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY,
  E_YCBCR_709 = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709,
  E_YCBCR_601 = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601,
  E_YCBCR_2020 = VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020
};

enum class SamplerYcbcrRange {
  E_ITU_FULL = VK_SAMPLER_YCBCR_RANGE_ITU_FULL,
  E_ITU_NARROW = VK_SAMPLER_YCBCR_RANGE_ITU_NARROW
};

enum class ChromaLocation {
  E_COSITED_EVEN = VK_CHROMA_LOCATION_COSITED_EVEN,
  E_MIDPOINT = VK_CHROMA_LOCATION_MIDPOINT
};

enum class BlendOverlap {
  E_UNCORRELATED_EXT = VK_BLEND_OVERLAP_UNCORRELATED_EXT,
  E_DISJOINT_EXT = VK_BLEND_OVERLAP_DISJOINT_EXT,
  E_CONJOINT_EXT = VK_BLEND_OVERLAP_CONJOINT_EXT
};

enum class CoverageModulationMode {
  E_NONE_NV = VK_COVERAGE_MODULATION_MODE_NONE_NV,
  E_RGB_NV = VK_COVERAGE_MODULATION_MODE_RGB_NV,
  E_ALPHA_NV = VK_COVERAGE_MODULATION_MODE_ALPHA_NV,
  E_RGBA_NV = VK_COVERAGE_MODULATION_MODE_RGBA_NV
};

enum class CoverageReductionMode {
  E_MERGE_NV = VK_COVERAGE_REDUCTION_MODE_MERGE_NV,
  E_TRUNCATE_NV = VK_COVERAGE_REDUCTION_MODE_TRUNCATE_NV
};

enum class ValidationCacheHeaderVersion {
  E_ONE_EXT = VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT
};

enum class ShaderInfoType {
  E_STATISTICS_AMD = VK_SHADER_INFO_TYPE_STATISTICS_AMD,
  E_BINARY_AMD = VK_SHADER_INFO_TYPE_BINARY_AMD,
  E_DISASSEMBLY_AMD = VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD
};

enum class QueueGlobalPriority {
  E_LOW_KHR = VK_QUEUE_GLOBAL_PRIORITY_LOW_KHR,
  E_MEDIUM_KHR = VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR,
  E_HIGH_KHR = VK_QUEUE_GLOBAL_PRIORITY_HIGH_KHR,
  E_REALTIME_KHR = VK_QUEUE_GLOBAL_PRIORITY_REALTIME_KHR,
  E_LOW_EXT = VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT,
  E_MEDIUM_EXT = VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT,
  E_HIGH_EXT = VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT,
  E_REALTIME_EXT = VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT
};

enum class DebugUtilsMessageSeverityMaskBits : VkDebugUtilsMessageSeverityFlagsEXT {
  E_VERBOSE_BIT_EXT = VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT,
  E_INFO_BIT_EXT = VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT,
  E_WARNING_BIT_EXT = VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT,
  E_ERROR_BIT_EXT = VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT
};

enum class DebugUtilsMessageTypeMaskBits : VkDebugUtilsMessageTypeFlagsEXT {
  E_GENERAL_BIT_EXT = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT,
  E_VALIDATION_BIT_EXT = VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT,
  E_PERFORMANCE_BIT_EXT = VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT
};

enum class ConservativeRasterizationMode {
  E_DISABLED_EXT = VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT,
  E_OVERESTIMATE_EXT = VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT,
  E_UNDERESTIMATE_EXT = VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT
};

enum class DescriptorBindingMaskBits : VkDescriptorBindingFlags {
  E_UPDATE_AFTER_BIND_BIT = VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT,
  E_UPDATE_UNUSED_WHILE_PENDING_BIT = VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT,
  E_PARTIALLY_BOUND_BIT = VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT,
  E_VARIABLE_DESCRIPTOR_COUNT_BIT = VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT
};

enum class VendorId {
  E_KHRONOS = VK_VENDOR_ID_KHRONOS,
  E_VIV = VK_VENDOR_ID_VIV,
  E_VSI = VK_VENDOR_ID_VSI,
  E_KAZAN = VK_VENDOR_ID_KAZAN,
  E_CODEPLAY = VK_VENDOR_ID_CODEPLAY,
  E_MESA = VK_VENDOR_ID_MESA,
  E_POCL = VK_VENDOR_ID_POCL,
  E_MOBILEYE = VK_VENDOR_ID_MOBILEYE
};

enum class DriverId {
  E_AMD_PROPRIETARY = VK_DRIVER_ID_AMD_PROPRIETARY,
  E_AMD_OPEN_SOURCE = VK_DRIVER_ID_AMD_OPEN_SOURCE,
  E_MESA_RADV = VK_DRIVER_ID_MESA_RADV,
  E_NVIDIA_PROPRIETARY = VK_DRIVER_ID_NVIDIA_PROPRIETARY,
  E_INTEL_PROPRIETARY_WINDOWS = VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS,
  E_INTEL_OPEN_SOURCE_MESA = VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA,
  E_IMAGINATION_PROPRIETARY = VK_DRIVER_ID_IMAGINATION_PROPRIETARY,
  E_QUALCOMM_PROPRIETARY = VK_DRIVER_ID_QUALCOMM_PROPRIETARY,
  E_ARM_PROPRIETARY = VK_DRIVER_ID_ARM_PROPRIETARY,
  E_GOOGLE_SWIFTSHADER = VK_DRIVER_ID_GOOGLE_SWIFTSHADER,
  E_GGP_PROPRIETARY = VK_DRIVER_ID_GGP_PROPRIETARY,
  E_BROADCOM_PROPRIETARY = VK_DRIVER_ID_BROADCOM_PROPRIETARY,
  E_MESA_LLVMPIPE = VK_DRIVER_ID_MESA_LLVMPIPE,
  E_MOLTENVK = VK_DRIVER_ID_MOLTENVK,
  E_COREAVI_PROPRIETARY = VK_DRIVER_ID_COREAVI_PROPRIETARY,
  E_JUICE_PROPRIETARY = VK_DRIVER_ID_JUICE_PROPRIETARY,
  E_VERISILICON_PROPRIETARY = VK_DRIVER_ID_VERISILICON_PROPRIETARY,
  E_MESA_TURNIP = VK_DRIVER_ID_MESA_TURNIP,
  E_MESA_V3DV = VK_DRIVER_ID_MESA_V3DV,
  E_MESA_PANVK = VK_DRIVER_ID_MESA_PANVK,
  E_SAMSUNG_PROPRIETARY = VK_DRIVER_ID_SAMSUNG_PROPRIETARY,
  E_MESA_VENUS = VK_DRIVER_ID_MESA_VENUS,
  E_MESA_DOZEN = VK_DRIVER_ID_MESA_DOZEN,
  E_MESA_NVK = VK_DRIVER_ID_MESA_NVK,
  E_IMAGINATION_OPEN_SOURCE_MESA = VK_DRIVER_ID_IMAGINATION_OPEN_SOURCE_MESA,
  E_MESA_HONEYKRISP = VK_DRIVER_ID_MESA_HONEYKRISP,
  E_RESERVED_27 = VK_DRIVER_ID_RESERVED_27
};

enum class ConditionalRenderingMaskBits : VkConditionalRenderingFlagsEXT {
  E_INVERTED_BIT_EXT = VK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT
};

enum class ResolveModeMaskBits : VkResolveModeFlags {
  E_NONE = VK_RESOLVE_MODE_NONE,
  E_SAMPLE_ZERO_BIT = VK_RESOLVE_MODE_SAMPLE_ZERO_BIT,
  E_AVERAGE_BIT = VK_RESOLVE_MODE_AVERAGE_BIT,
  E_MIN_BIT = VK_RESOLVE_MODE_MIN_BIT,
  E_MAX_BIT = VK_RESOLVE_MODE_MAX_BIT
};

enum class ShadingRatePaletteEntry {
  E_NO_INVOCATIONS_NV = VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV,
  E_16_INVOCATIONS_PER_PIXEL_NV = VK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV,
  E_8_INVOCATIONS_PER_PIXEL_NV = VK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV,
  E_4_INVOCATIONS_PER_PIXEL_NV = VK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV,
  E_2_INVOCATIONS_PER_PIXEL_NV = VK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV,
  E_1_INVOCATION_PER_PIXEL_NV = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV,
  E_1_INVOCATION_PER_2X1_PIXELS_NV = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV,
  E_1_INVOCATION_PER_1X2_PIXELS_NV = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV,
  E_1_INVOCATION_PER_2X2_PIXELS_NV = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV,
  E_1_INVOCATION_PER_4X2_PIXELS_NV = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV,
  E_1_INVOCATION_PER_2X4_PIXELS_NV = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV,
  E_1_INVOCATION_PER_4X4_PIXELS_NV = VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV
};

enum class CoarseSampleOrderType {
  E_DEFAULT_NV = VK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV,
  E_CUSTOM_NV = VK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV,
  E_PIXEL_MAJOR_NV = VK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV,
  E_SAMPLE_MAJOR_NV = VK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV
};

enum class GeometryInstanceMaskBits : VkGeometryInstanceFlagsKHR {
  E_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR = VK_GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR,
  E_TRIANGLE_FLIP_FACING_BIT_KHR = VK_GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR,
  E_FORCE_OPAQUE_BIT_KHR = VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR,
  E_FORCE_NO_OPAQUE_BIT_KHR = VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR,
  E_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR = VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR
};

enum class GeometryMaskBits : VkGeometryFlagsKHR {
  E_OPAQUE_BIT_KHR = VK_GEOMETRY_OPAQUE_BIT_KHR,
  E_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR = VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR
};

enum class BuildAccelerationStructureMaskBits : VkBuildAccelerationStructureFlagsKHR {
  E_ALLOW_UPDATE_BIT_KHR = VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_KHR,
  E_ALLOW_COMPACTION_BIT_KHR = VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_KHR,
  E_PREFER_FAST_TRACE_BIT_KHR = VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_KHR,
  E_PREFER_FAST_BUILD_BIT_KHR = VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_KHR,
  E_LOW_MEMORY_BIT_KHR = VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_KHR
};

enum class AccelerationStructureCreateMaskBits : VkAccelerationStructureCreateFlagsKHR {
  E_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR = VK_ACCELERATION_STRUCTURE_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR
};

enum class CopyAccelerationStructureMode {
  E_CLONE_KHR = VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR,
  E_COMPACT_KHR = VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR,
  E_SERIALIZE_KHR = VK_COPY_ACCELERATION_STRUCTURE_MODE_SERIALIZE_KHR,
  E_DESERIALIZE_KHR = VK_COPY_ACCELERATION_STRUCTURE_MODE_DESERIALIZE_KHR
};

enum class BuildAccelerationStructureMode {
  E_BUILD_KHR = VK_BUILD_ACCELERATION_STRUCTURE_MODE_BUILD_KHR,
  E_UPDATE_KHR = VK_BUILD_ACCELERATION_STRUCTURE_MODE_UPDATE_KHR
};

enum class AccelerationStructureType {
  E_TOP_LEVEL_KHR = VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_KHR,
  E_BOTTOM_LEVEL_KHR = VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_KHR,
  E_GENERIC_KHR = VK_ACCELERATION_STRUCTURE_TYPE_GENERIC_KHR
};

enum class GeometryType {
  E_TRIANGLES_KHR = VK_GEOMETRY_TYPE_TRIANGLES_KHR,
  E_AABBS_KHR = VK_GEOMETRY_TYPE_AABBS_KHR,
  E_INSTANCES_KHR = VK_GEOMETRY_TYPE_INSTANCES_KHR
};

enum class AccelerationStructureMemoryRequirementsType {
  E_OBJECT_NV = VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV,
  E_BUILD_SCRATCH_NV = VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV,
  E_UPDATE_SCRATCH_NV = VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV
};

enum class AccelerationStructureBuildType {
  E_HOST_KHR = VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_KHR,
  E_DEVICE_KHR = VK_ACCELERATION_STRUCTURE_BUILD_TYPE_DEVICE_KHR,
  E_HOST_OR_DEVICE_KHR = VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_OR_DEVICE_KHR
};

enum class RayTracingShaderGroupType {
  E_GENERAL_KHR = VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR,
  E_TRIANGLES_HIT_GROUP_KHR = VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR,
  E_PROCEDURAL_HIT_GROUP_KHR = VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR
};

enum class AccelerationStructureCompatibility {
  E_COMPATIBLE_KHR = VK_ACCELERATION_STRUCTURE_COMPATIBILITY_COMPATIBLE_KHR,
  E_INCOMPATIBLE_KHR = VK_ACCELERATION_STRUCTURE_COMPATIBILITY_INCOMPATIBLE_KHR
};

enum class ShaderGroupShader {
  E_GENERAL_KHR = VK_SHADER_GROUP_SHADER_GENERAL_KHR,
  E_CLOSEST_HIT_KHR = VK_SHADER_GROUP_SHADER_CLOSEST_HIT_KHR,
  E_ANY_HIT_KHR = VK_SHADER_GROUP_SHADER_ANY_HIT_KHR,
  E_INTERSECTION_KHR = VK_SHADER_GROUP_SHADER_INTERSECTION_KHR
};

enum class MemoryOverallocationBehavior {
  E_DEFAULT_AMD = VK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD,
  E_ALLOWED_AMD = VK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD,
  E_DISALLOWED_AMD = VK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD
};

enum class DeviceDiagnosticsConfigMaskBits : VkDeviceDiagnosticsConfigFlagsNV {
  E_ENABLE_SHADER_DEBUG_INFO_BIT_NV = VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_DEBUG_INFO_BIT_NV,
  E_ENABLE_RESOURCE_TRACKING_BIT_NV = VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_RESOURCE_TRACKING_BIT_NV,
  E_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV = VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV,
  E_ENABLE_SHADER_ERROR_REPORTING_BIT_NV = VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_ERROR_REPORTING_BIT_NV
};

enum class PipelineCreationFeedbackMaskBits : VkPipelineCreationFeedbackFlags {
  E_VALID_BIT = VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT,
  E_VALID_BIT_EXT = VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT,
  E_APPLICATION_PIPELINE_CACHE_HIT_BIT = VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT,
  E_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT = VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT,
  E_BASE_PIPELINE_ACCELERATION_BIT = VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT,
  E_BASE_PIPELINE_ACCELERATION_BIT_EXT = VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT
};

#ifdef VK_USE_PLATFORM_WIN32_KHR

enum class FullScreenExclusive {
  E_DEFAULT_EXT = VK_FULL_SCREEN_EXCLUSIVE_DEFAULT_EXT,
  E_ALLOWED_EXT = VK_FULL_SCREEN_EXCLUSIVE_ALLOWED_EXT,
  E_DISALLOWED_EXT = VK_FULL_SCREEN_EXCLUSIVE_DISALLOWED_EXT,
  E_APPLICATION_CONTROLLED_EXT = VK_FULL_SCREEN_EXCLUSIVE_APPLICATION_CONTROLLED_EXT
};

#endif // VK_USE_PLATFORM_WIN32_KHR

enum class PerformanceCounterScope {
  E_COMMAND_BUFFER_KHR = VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR,
  E_RENDER_PASS_KHR = VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR,
  E_COMMAND_KHR = VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR
};

enum class MemoryDecompressionMethodMaskBits : VkMemoryDecompressionMethodFlagsNV {
  E_GDEFLATE_1_0_BIT_NV = VK_MEMORY_DECOMPRESSION_METHOD_GDEFLATE_1_0_BIT_NV
};

enum class PerformanceCounterUnit {
  E_GENERIC_KHR = VK_PERFORMANCE_COUNTER_UNIT_GENERIC_KHR,
  E_PERCENTAGE_KHR = VK_PERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHR,
  E_NANOSECONDS_KHR = VK_PERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHR,
  E_BYTES_KHR = VK_PERFORMANCE_COUNTER_UNIT_BYTES_KHR,
  E_BYTES_PER_SECOND_KHR = VK_PERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHR,
  E_KELVIN_KHR = VK_PERFORMANCE_COUNTER_UNIT_KELVIN_KHR,
  E_WATTS_KHR = VK_PERFORMANCE_COUNTER_UNIT_WATTS_KHR,
  E_VOLTS_KHR = VK_PERFORMANCE_COUNTER_UNIT_VOLTS_KHR,
  E_AMPS_KHR = VK_PERFORMANCE_COUNTER_UNIT_AMPS_KHR,
  E_HERTZ_KHR = VK_PERFORMANCE_COUNTER_UNIT_HERTZ_KHR,
  E_CYCLES_KHR = VK_PERFORMANCE_COUNTER_UNIT_CYCLES_KHR
};

enum class PerformanceCounterStorage {
  E_INT32_KHR = VK_PERFORMANCE_COUNTER_STORAGE_INT32_KHR,
  E_INT64_KHR = VK_PERFORMANCE_COUNTER_STORAGE_INT64_KHR,
  E_UINT32_KHR = VK_PERFORMANCE_COUNTER_STORAGE_UINT32_KHR,
  E_UINT64_KHR = VK_PERFORMANCE_COUNTER_STORAGE_UINT64_KHR,
  E_FLOAT32_KHR = VK_PERFORMANCE_COUNTER_STORAGE_FLOAT32_KHR,
  E_FLOAT64_KHR = VK_PERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR
};

enum class PerformanceCounterDescriptionMaskBits : VkPerformanceCounterDescriptionFlagsKHR {
  E_PERFORMANCE_IMPACTING_BIT_KHR = VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHR,
  E_CONCURRENTLY_IMPACTED_BIT_KHR = VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR
};

enum class PerformanceConfigurationType {
  E_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL = VK_PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL
};

enum class QueryPoolSamplingMode {
  E_MANUAL_INTEL = VK_QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL
};

enum class PerformanceOverrideType {
  E_NULL_HARDWARE_INTEL = VK_PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL,
  E_FLUSH_GPU_CACHES_INTEL = VK_PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL
};

enum class PerformanceParameterType {
  E_HW_COUNTERS_SUPPORTED_INTEL = VK_PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL,
  E_STREAM_MARKER_VALID_BITS_INTEL = VK_PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL
};

enum class PerformanceValueType {
  E_UINT32_INTEL = VK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL,
  E_UINT64_INTEL = VK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL,
  E_FLOAT_INTEL = VK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL,
  E_BOOL_INTEL = VK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL,
  E_STRING_INTEL = VK_PERFORMANCE_VALUE_TYPE_STRING_INTEL
};

enum class ShaderFloatControlsIndependence {
  E_32_BIT_ONLY = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY,
  E_ALL = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL,
  E_NONE = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE
};

enum class PipelineExecutableStatisticFormat {
  E_BOOL32_KHR = VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR,
  E_INT64_KHR = VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR,
  E_UINT64_KHR = VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR,
  E_FLOAT64_KHR = VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR
};

enum class LineRasterizationMode {
  E_DEFAULT_KHR = VK_LINE_RASTERIZATION_MODE_DEFAULT_KHR,
  E_DEFAULT_EXT = VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT,
  E_RECTANGULAR_KHR = VK_LINE_RASTERIZATION_MODE_RECTANGULAR_KHR,
  E_RECTANGULAR_EXT = VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT,
  E_BRESENHAM_KHR = VK_LINE_RASTERIZATION_MODE_BRESENHAM_KHR,
  E_BRESENHAM_EXT = VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT,
  E_RECTANGULAR_SMOOTH_KHR = VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_KHR,
  E_RECTANGULAR_SMOOTH_EXT = VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT
};

enum class ToolPurposeMaskBits : VkToolPurposeFlags {
  E_VALIDATION_BIT = VK_TOOL_PURPOSE_VALIDATION_BIT,
  E_VALIDATION_BIT_EXT = VK_TOOL_PURPOSE_VALIDATION_BIT_EXT,
  E_PROFILING_BIT = VK_TOOL_PURPOSE_PROFILING_BIT,
  E_PROFILING_BIT_EXT = VK_TOOL_PURPOSE_PROFILING_BIT_EXT,
  E_TRACING_BIT = VK_TOOL_PURPOSE_TRACING_BIT,
  E_TRACING_BIT_EXT = VK_TOOL_PURPOSE_TRACING_BIT_EXT,
  E_ADDITIONAL_FEATURES_BIT = VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT,
  E_ADDITIONAL_FEATURES_BIT_EXT = VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT,
  E_MODIFYING_FEATURES_BIT = VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT,
  E_MODIFYING_FEATURES_BIT_EXT = VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT
};

enum class FragmentShadingRateCombinerOp {
  E_KEEP_KHR = VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR,
  E_REPLACE_KHR = VK_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR,
  E_MIN_KHR = VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHR,
  E_MAX_KHR = VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHR,
  E_MUL_KHR = VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR
};

enum class FragmentShadingRate {
  E_1_INVOCATION_PER_PIXEL_NV = VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV,
  E_1_INVOCATION_PER_1X2_PIXELS_NV = VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV,
  E_1_INVOCATION_PER_2X1_PIXELS_NV = VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV,
  E_1_INVOCATION_PER_2X2_PIXELS_NV = VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV,
  E_1_INVOCATION_PER_2X4_PIXELS_NV = VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV,
  E_1_INVOCATION_PER_4X2_PIXELS_NV = VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV,
  E_1_INVOCATION_PER_4X4_PIXELS_NV = VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV,
  E_2_INVOCATIONS_PER_PIXEL_NV = VK_FRAGMENT_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV,
  E_4_INVOCATIONS_PER_PIXEL_NV = VK_FRAGMENT_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV,
  E_8_INVOCATIONS_PER_PIXEL_NV = VK_FRAGMENT_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV,
  E_16_INVOCATIONS_PER_PIXEL_NV = VK_FRAGMENT_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV,
  E_NO_INVOCATIONS_NV = VK_FRAGMENT_SHADING_RATE_NO_INVOCATIONS_NV
};

enum class FragmentShadingRateType {
  E_FRAGMENT_SIZE_NV = VK_FRAGMENT_SHADING_RATE_TYPE_FRAGMENT_SIZE_NV,
  E_ENUMS_NV = VK_FRAGMENT_SHADING_RATE_TYPE_ENUMS_NV
};

enum class SubpassMergeStatus {
  E_MERGED_EXT = VK_SUBPASS_MERGE_STATUS_MERGED_EXT,
  E_DISALLOWED_EXT = VK_SUBPASS_MERGE_STATUS_DISALLOWED_EXT,
  E_NOT_MERGED_SIDE_EFFECTS_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_SIDE_EFFECTS_EXT,
  E_NOT_MERGED_SAMPLES_MISMATCH_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_SAMPLES_MISMATCH_EXT,
  E_NOT_MERGED_VIEWS_MISMATCH_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_VIEWS_MISMATCH_EXT,
  E_NOT_MERGED_ALIASING_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_ALIASING_EXT,
  E_NOT_MERGED_DEPENDENCIES_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_DEPENDENCIES_EXT,
  E_NOT_MERGED_INCOMPATIBLE_INPUT_ATTACHMENT_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_INCOMPATIBLE_INPUT_ATTACHMENT_EXT,
  E_NOT_MERGED_TOO_MANY_ATTACHMENTS_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_TOO_MANY_ATTACHMENTS_EXT,
  E_NOT_MERGED_INSUFFICIENT_STORAGE_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_INSUFFICIENT_STORAGE_EXT,
  E_NOT_MERGED_DEPTH_STENCIL_COUNT_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_DEPTH_STENCIL_COUNT_EXT,
  E_NOT_MERGED_RESOLVE_ATTACHMENT_REUSE_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_RESOLVE_ATTACHMENT_REUSE_EXT,
  E_NOT_MERGED_SINGLE_SUBPASS_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_SINGLE_SUBPASS_EXT,
  E_NOT_MERGED_UNSPECIFIED_EXT = VK_SUBPASS_MERGE_STATUS_NOT_MERGED_UNSPECIFIED_EXT
};

enum class AccessMaskBits2 : VkAccessFlags2 {
  E_NONE = VK_ACCESS_2_NONE,
  E_NONE_KHR = VK_ACCESS_2_NONE_KHR,
  E_INDIRECT_COMMAND_READ_BIT = VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT,
  E_INDIRECT_COMMAND_READ_BIT_KHR = VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT_KHR,
  E_INDEX_READ_BIT = VK_ACCESS_2_INDEX_READ_BIT,
  E_INDEX_READ_BIT_KHR = VK_ACCESS_2_INDEX_READ_BIT_KHR,
  E_VERTEX_ATTRIBUTE_READ_BIT = VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT,
  E_VERTEX_ATTRIBUTE_READ_BIT_KHR = VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT_KHR,
  E_UNIFORM_READ_BIT = VK_ACCESS_2_UNIFORM_READ_BIT,
  E_UNIFORM_READ_BIT_KHR = VK_ACCESS_2_UNIFORM_READ_BIT_KHR,
  E_INPUT_ATTACHMENT_READ_BIT = VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT,
  E_INPUT_ATTACHMENT_READ_BIT_KHR = VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT_KHR,
  E_SHADER_READ_BIT = VK_ACCESS_2_SHADER_READ_BIT,
  E_SHADER_READ_BIT_KHR = VK_ACCESS_2_SHADER_READ_BIT_KHR,
  E_SHADER_WRITE_BIT = VK_ACCESS_2_SHADER_WRITE_BIT,
  E_SHADER_WRITE_BIT_KHR = VK_ACCESS_2_SHADER_WRITE_BIT_KHR,
  E_COLOR_ATTACHMENT_READ_BIT = VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT,
  E_COLOR_ATTACHMENT_READ_BIT_KHR = VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT_KHR,
  E_COLOR_ATTACHMENT_WRITE_BIT = VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT,
  E_COLOR_ATTACHMENT_WRITE_BIT_KHR = VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT_KHR,
  E_DEPTH_STENCIL_ATTACHMENT_READ_BIT = VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT,
  E_DEPTH_STENCIL_ATTACHMENT_READ_BIT_KHR = VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT_KHR,
  E_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT,
  E_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT_KHR = VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT_KHR,
  E_TRANSFER_READ_BIT = VK_ACCESS_2_TRANSFER_READ_BIT,
  E_TRANSFER_READ_BIT_KHR = VK_ACCESS_2_TRANSFER_READ_BIT_KHR,
  E_TRANSFER_WRITE_BIT = VK_ACCESS_2_TRANSFER_WRITE_BIT,
  E_TRANSFER_WRITE_BIT_KHR = VK_ACCESS_2_TRANSFER_WRITE_BIT_KHR,
  E_HOST_READ_BIT = VK_ACCESS_2_HOST_READ_BIT,
  E_HOST_READ_BIT_KHR = VK_ACCESS_2_HOST_READ_BIT_KHR,
  E_HOST_WRITE_BIT = VK_ACCESS_2_HOST_WRITE_BIT,
  E_HOST_WRITE_BIT_KHR = VK_ACCESS_2_HOST_WRITE_BIT_KHR,
  E_MEMORY_READ_BIT = VK_ACCESS_2_MEMORY_READ_BIT,
  E_MEMORY_READ_BIT_KHR = VK_ACCESS_2_MEMORY_READ_BIT_KHR,
  E_MEMORY_WRITE_BIT = VK_ACCESS_2_MEMORY_WRITE_BIT,
  E_MEMORY_WRITE_BIT_KHR = VK_ACCESS_2_MEMORY_WRITE_BIT_KHR,
  E_SHADER_SAMPLED_READ_BIT = VK_ACCESS_2_SHADER_SAMPLED_READ_BIT,
  E_SHADER_SAMPLED_READ_BIT_KHR = VK_ACCESS_2_SHADER_SAMPLED_READ_BIT_KHR,
  E_SHADER_STORAGE_READ_BIT = VK_ACCESS_2_SHADER_STORAGE_READ_BIT,
  E_SHADER_STORAGE_READ_BIT_KHR = VK_ACCESS_2_SHADER_STORAGE_READ_BIT_KHR,
  E_SHADER_STORAGE_WRITE_BIT = VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT,
  E_SHADER_STORAGE_WRITE_BIT_KHR = VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT_KHR
};

enum class PipelineStageMaskBits2 : VkPipelineStageFlags2 {
  E_NONE = VK_PIPELINE_STAGE_2_NONE,
  E_NONE_KHR = VK_PIPELINE_STAGE_2_NONE_KHR,
  E_TOP_OF_PIPE_BIT = VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT,
  E_TOP_OF_PIPE_BIT_KHR = VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR,
  E_DRAW_INDIRECT_BIT = VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT,
  E_DRAW_INDIRECT_BIT_KHR = VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR,
  E_VERTEX_INPUT_BIT = VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT,
  E_VERTEX_INPUT_BIT_KHR = VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR,
  E_VERTEX_SHADER_BIT = VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT,
  E_VERTEX_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR,
  E_TESSELLATION_CONTROL_SHADER_BIT = VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT,
  E_TESSELLATION_CONTROL_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR,
  E_TESSELLATION_EVALUATION_SHADER_BIT = VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT,
  E_TESSELLATION_EVALUATION_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR,
  E_GEOMETRY_SHADER_BIT = VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT,
  E_GEOMETRY_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR,
  E_FRAGMENT_SHADER_BIT = VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT,
  E_FRAGMENT_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR,
  E_EARLY_FRAGMENT_TESTS_BIT = VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT,
  E_EARLY_FRAGMENT_TESTS_BIT_KHR = VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR,
  E_LATE_FRAGMENT_TESTS_BIT = VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT,
  E_LATE_FRAGMENT_TESTS_BIT_KHR = VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR,
  E_COLOR_ATTACHMENT_OUTPUT_BIT = VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT,
  E_COLOR_ATTACHMENT_OUTPUT_BIT_KHR = VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR,
  E_COMPUTE_SHADER_BIT = VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT,
  E_COMPUTE_SHADER_BIT_KHR = VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR,
  E_ALL_TRANSFER_BIT = VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT,
  E_ALL_TRANSFER_BIT_KHR = VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR,
  E_TRANSFER_BIT = VK_PIPELINE_STAGE_2_TRANSFER_BIT,
  E_TRANSFER_BIT_KHR = VK_PIPELINE_STAGE_2_TRANSFER_BIT_KHR,
  E_BOTTOM_OF_PIPE_BIT = VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT,
  E_BOTTOM_OF_PIPE_BIT_KHR = VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR,
  E_HOST_BIT = VK_PIPELINE_STAGE_2_HOST_BIT,
  E_HOST_BIT_KHR = VK_PIPELINE_STAGE_2_HOST_BIT_KHR,
  E_ALL_GRAPHICS_BIT = VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT,
  E_ALL_GRAPHICS_BIT_KHR = VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR,
  E_ALL_COMMANDS_BIT = VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT,
  E_ALL_COMMANDS_BIT_KHR = VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR,
  E_COPY_BIT = VK_PIPELINE_STAGE_2_COPY_BIT,
  E_COPY_BIT_KHR = VK_PIPELINE_STAGE_2_COPY_BIT_KHR,
  E_RESOLVE_BIT = VK_PIPELINE_STAGE_2_RESOLVE_BIT,
  E_RESOLVE_BIT_KHR = VK_PIPELINE_STAGE_2_RESOLVE_BIT_KHR,
  E_BLIT_BIT = VK_PIPELINE_STAGE_2_BLIT_BIT,
  E_BLIT_BIT_KHR = VK_PIPELINE_STAGE_2_BLIT_BIT_KHR,
  E_CLEAR_BIT = VK_PIPELINE_STAGE_2_CLEAR_BIT,
  E_CLEAR_BIT_KHR = VK_PIPELINE_STAGE_2_CLEAR_BIT_KHR,
  E_INDEX_INPUT_BIT = VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT,
  E_INDEX_INPUT_BIT_KHR = VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR,
  E_VERTEX_ATTRIBUTE_INPUT_BIT = VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT,
  E_VERTEX_ATTRIBUTE_INPUT_BIT_KHR = VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR,
  E_PRE_RASTERIZATION_SHADERS_BIT = VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT,
  E_PRE_RASTERIZATION_SHADERS_BIT_KHR = VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR
};

enum class SubmitMaskBits : VkSubmitFlags {
  E_PROTECTED_BIT = VK_SUBMIT_PROTECTED_BIT,
  E_PROTECTED_BIT_KHR = VK_SUBMIT_PROTECTED_BIT_KHR
};

enum class ProvokingVertexMode {
  E_FIRST_VERTEX_EXT = VK_PROVOKING_VERTEX_MODE_FIRST_VERTEX_EXT,
  E_LAST_VERTEX_EXT = VK_PROVOKING_VERTEX_MODE_LAST_VERTEX_EXT
};

enum class AccelerationStructureMotionInstanceType {
  E_STATIC_NV = VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_STATIC_NV,
  E_MATRIX_MOTION_NV = VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MATRIX_MOTION_NV,
  E_SRT_MOTION_NV = VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_SRT_MOTION_NV
};

enum class GraphicsPipelineLibraryMaskBits : VkGraphicsPipelineLibraryFlagsEXT {
  E_VERTEX_INPUT_INTERFACE_BIT_EXT = VK_GRAPHICS_PIPELINE_LIBRARY_VERTEX_INPUT_INTERFACE_BIT_EXT,
  E_PRE_RASTERIZATION_SHADERS_BIT_EXT = VK_GRAPHICS_PIPELINE_LIBRARY_PRE_RASTERIZATION_SHADERS_BIT_EXT,
  E_FRAGMENT_SHADER_BIT_EXT = VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_SHADER_BIT_EXT,
  E_FRAGMENT_OUTPUT_INTERFACE_BIT_EXT = VK_GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_OUTPUT_INTERFACE_BIT_EXT
};

enum class DeviceAddressBindingMaskBits : VkDeviceAddressBindingFlagsEXT {
  E_INTERNAL_OBJECT_BIT_EXT = VK_DEVICE_ADDRESS_BINDING_INTERNAL_OBJECT_BIT_EXT
};

enum class DeviceAddressBindingType {
  E_BIND_EXT = VK_DEVICE_ADDRESS_BINDING_TYPE_BIND_EXT,
  E_UNBIND_EXT = VK_DEVICE_ADDRESS_BINDING_TYPE_UNBIND_EXT
};

enum class FrameBoundaryMaskBits : VkFrameBoundaryFlagsEXT {
  E_FRAME_END_BIT_EXT = VK_FRAME_BOUNDARY_FRAME_END_BIT_EXT
};

enum class PresentScalingMaskBits : VkPresentScalingFlagsEXT {
  E_ONE_TO_ONE_BIT_EXT = VK_PRESENT_SCALING_ONE_TO_ONE_BIT_EXT,
  E_ASPECT_RATIO_STRETCH_BIT_EXT = VK_PRESENT_SCALING_ASPECT_RATIO_STRETCH_BIT_EXT,
  E_STRETCH_BIT_EXT = VK_PRESENT_SCALING_STRETCH_BIT_EXT
};

enum class PresentGravityMaskBits : VkPresentGravityFlagsEXT {
  E_MIN_BIT_EXT = VK_PRESENT_GRAVITY_MIN_BIT_EXT,
  E_MAX_BIT_EXT = VK_PRESENT_GRAVITY_MAX_BIT_EXT,
  E_CENTERED_BIT_EXT = VK_PRESENT_GRAVITY_CENTERED_BIT_EXT
};

enum class PhysicalDeviceSchedulingControlsMaskBits : VkPhysicalDeviceSchedulingControlsFlagsARM {
  E_SHADER_CORE_COUNT_ARM = VK_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_SHADER_CORE_COUNT_ARM
};

enum class VideoCodecOperationMaskBits : VkVideoCodecOperationFlagsKHR {
  E_NONE_KHR = VK_VIDEO_CODEC_OPERATION_NONE_KHR
};

enum class VideoChromaSubsamplingMaskBits : VkVideoChromaSubsamplingFlagsKHR {
  E_INVALID_KHR = VK_VIDEO_CHROMA_SUBSAMPLING_INVALID_KHR,
  E_MONOCHROME_BIT_KHR = VK_VIDEO_CHROMA_SUBSAMPLING_MONOCHROME_BIT_KHR,
  E_420_BIT_KHR = VK_VIDEO_CHROMA_SUBSAMPLING_420_BIT_KHR,
  E_422_BIT_KHR = VK_VIDEO_CHROMA_SUBSAMPLING_422_BIT_KHR,
  E_444_BIT_KHR = VK_VIDEO_CHROMA_SUBSAMPLING_444_BIT_KHR
};

enum class VideoComponentBitDepthMaskBits : VkVideoComponentBitDepthFlagsKHR {
  E_INVALID_KHR = VK_VIDEO_COMPONENT_BIT_DEPTH_INVALID_KHR,
  E_8_BIT_KHR = VK_VIDEO_COMPONENT_BIT_DEPTH_8_BIT_KHR,
  E_10_BIT_KHR = VK_VIDEO_COMPONENT_BIT_DEPTH_10_BIT_KHR,
  E_12_BIT_KHR = VK_VIDEO_COMPONENT_BIT_DEPTH_12_BIT_KHR
};

enum class VideoCapabilityMaskBits : VkVideoCapabilityFlagsKHR {
  E_PROTECTED_CONTENT_BIT_KHR = VK_VIDEO_CAPABILITY_PROTECTED_CONTENT_BIT_KHR,
  E_SEPARATE_REFERENCE_IMAGES_BIT_KHR = VK_VIDEO_CAPABILITY_SEPARATE_REFERENCE_IMAGES_BIT_KHR
};

enum class VideoSessionCreateMaskBits : VkVideoSessionCreateFlagsKHR {
  E_PROTECTED_CONTENT_BIT_KHR = VK_VIDEO_SESSION_CREATE_PROTECTED_CONTENT_BIT_KHR
};

enum class VideoDecodeH264PictureLayoutMaskBits : VkVideoDecodeH264PictureLayoutFlagsKHR {
  E_PROGRESSIVE_KHR = VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_PROGRESSIVE_KHR,
  E_INTERLACED_INTERLEAVED_LINES_BIT_KHR = VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_INTERLEAVED_LINES_BIT_KHR,
  E_INTERLACED_SEPARATE_PLANES_BIT_KHR = VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_SEPARATE_PLANES_BIT_KHR
};

enum class VideoCodingControlMaskBits : VkVideoCodingControlFlagsKHR {
  E_RESET_BIT_KHR = VK_VIDEO_CODING_CONTROL_RESET_BIT_KHR
};

enum class QueryResultStatus {
  E_ERROR_KHR = VK_QUERY_RESULT_STATUS_ERROR_KHR,
  E_NOT_READY_KHR = VK_QUERY_RESULT_STATUS_NOT_READY_KHR,
  E_COMPLETE_KHR = VK_QUERY_RESULT_STATUS_COMPLETE_KHR
};

enum class VideoDecodeUsageMaskBits : VkVideoDecodeUsageFlagsKHR {
  E_DEFAULT_KHR = VK_VIDEO_DECODE_USAGE_DEFAULT_KHR,
  E_TRANSCODING_BIT_KHR = VK_VIDEO_DECODE_USAGE_TRANSCODING_BIT_KHR,
  E_OFFLINE_BIT_KHR = VK_VIDEO_DECODE_USAGE_OFFLINE_BIT_KHR,
  E_STREAMING_BIT_KHR = VK_VIDEO_DECODE_USAGE_STREAMING_BIT_KHR
};

enum class VideoDecodeCapabilityMaskBits : VkVideoDecodeCapabilityFlagsKHR {
  E_DPB_AND_OUTPUT_COINCIDE_BIT_KHR = VK_VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_COINCIDE_BIT_KHR,
  E_DPB_AND_OUTPUT_DISTINCT_BIT_KHR = VK_VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_DISTINCT_BIT_KHR
};

enum class VideoEncodeUsageMaskBits : VkVideoEncodeUsageFlagsKHR {
  E_DEFAULT_KHR = VK_VIDEO_ENCODE_USAGE_DEFAULT_KHR,
  E_TRANSCODING_BIT_KHR = VK_VIDEO_ENCODE_USAGE_TRANSCODING_BIT_KHR,
  E_STREAMING_BIT_KHR = VK_VIDEO_ENCODE_USAGE_STREAMING_BIT_KHR,
  E_RECORDING_BIT_KHR = VK_VIDEO_ENCODE_USAGE_RECORDING_BIT_KHR,
  E_CONFERENCING_BIT_KHR = VK_VIDEO_ENCODE_USAGE_CONFERENCING_BIT_KHR
};

enum class VideoEncodeContentMaskBits : VkVideoEncodeContentFlagsKHR {
  E_DEFAULT_KHR = VK_VIDEO_ENCODE_CONTENT_DEFAULT_KHR,
  E_CAMERA_BIT_KHR = VK_VIDEO_ENCODE_CONTENT_CAMERA_BIT_KHR,
  E_DESKTOP_BIT_KHR = VK_VIDEO_ENCODE_CONTENT_DESKTOP_BIT_KHR,
  E_RENDERED_BIT_KHR = VK_VIDEO_ENCODE_CONTENT_RENDERED_BIT_KHR
};

enum class VideoEncodeTuningMode {
  E_DEFAULT_KHR = VK_VIDEO_ENCODE_TUNING_MODE_DEFAULT_KHR,
  E_HIGH_QUALITY_KHR = VK_VIDEO_ENCODE_TUNING_MODE_HIGH_QUALITY_KHR,
  E_LOW_LATENCY_KHR = VK_VIDEO_ENCODE_TUNING_MODE_LOW_LATENCY_KHR,
  E_ULTRA_LOW_LATENCY_KHR = VK_VIDEO_ENCODE_TUNING_MODE_ULTRA_LOW_LATENCY_KHR,
  E_LOSSLESS_KHR = VK_VIDEO_ENCODE_TUNING_MODE_LOSSLESS_KHR
};

enum class VideoEncodeCapabilityMaskBits : VkVideoEncodeCapabilityFlagsKHR {
  E_PRECEDING_EXTERNALLY_ENCODED_BYTES_BIT_KHR = VK_VIDEO_ENCODE_CAPABILITY_PRECEDING_EXTERNALLY_ENCODED_BYTES_BIT_KHR,
  E_INSUFFICIENT_BITSTREAM_BUFFER_RANGE_DETECTION_BIT_KHR = VK_VIDEO_ENCODE_CAPABILITY_INSUFFICIENT_BITSTREAM_BUFFER_RANGE_DETECTION_BIT_KHR
};

enum class VideoEncodeFeedbackMaskBits : VkVideoEncodeFeedbackFlagsKHR {
  E_BITSTREAM_BUFFER_OFFSET_BIT_KHR = VK_VIDEO_ENCODE_FEEDBACK_BITSTREAM_BUFFER_OFFSET_BIT_KHR,
  E_BITSTREAM_BYTES_WRITTEN_BIT_KHR = VK_VIDEO_ENCODE_FEEDBACK_BITSTREAM_BYTES_WRITTEN_BIT_KHR,
  E_BITSTREAM_HAS_OVERRIDES_BIT_KHR = VK_VIDEO_ENCODE_FEEDBACK_BITSTREAM_HAS_OVERRIDES_BIT_KHR
};

enum class VideoEncodeRateControlModeMaskBits : VkVideoEncodeRateControlModeFlagsKHR {
  E_DEFAULT_KHR = VK_VIDEO_ENCODE_RATE_CONTROL_MODE_DEFAULT_KHR,
  E_DISABLED_BIT_KHR = VK_VIDEO_ENCODE_RATE_CONTROL_MODE_DISABLED_BIT_KHR,
  E_CBR_BIT_KHR = VK_VIDEO_ENCODE_RATE_CONTROL_MODE_CBR_BIT_KHR,
  E_VBR_BIT_KHR = VK_VIDEO_ENCODE_RATE_CONTROL_MODE_VBR_BIT_KHR
};

enum class VideoEncodeH264CapabilityMaskBits : VkVideoEncodeH264CapabilityFlagsKHR {
  E_HRD_COMPLIANCE_BIT_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_HRD_COMPLIANCE_BIT_KHR,
  E_PREDICTION_WEIGHT_TABLE_GENERATED_BIT_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_PREDICTION_WEIGHT_TABLE_GENERATED_BIT_KHR,
  E_ROW_UNALIGNED_SLICE_BIT_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_ROW_UNALIGNED_SLICE_BIT_KHR,
  E_DIFFERENT_SLICE_TYPE_BIT_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_DIFFERENT_SLICE_TYPE_BIT_KHR,
  E_B_FRAME_IN_L0_LIST_BIT_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_B_FRAME_IN_L0_LIST_BIT_KHR,
  E_B_FRAME_IN_L1_LIST_BIT_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_B_FRAME_IN_L1_LIST_BIT_KHR,
  E_PER_PICTURE_TYPE_MIN_MAX_QP_BIT_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_PER_PICTURE_TYPE_MIN_MAX_QP_BIT_KHR,
  E_PER_SLICE_CONSTANT_QP_BIT_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_PER_SLICE_CONSTANT_QP_BIT_KHR,
  E_GENERATE_PREFIX_NALU_BIT_KHR = VK_VIDEO_ENCODE_H264_CAPABILITY_GENERATE_PREFIX_NALU_BIT_KHR
};

enum class VideoEncodeH264StdMaskBits : VkVideoEncodeH264StdFlagsKHR {
  E_SEPARATE_COLOR_PLANE_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_SEPARATE_COLOR_PLANE_FLAG_SET_BIT_KHR,
  E_QPPRIME_Y_ZERO_TRANSFORM_BYPASS_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_QPPRIME_Y_ZERO_TRANSFORM_BYPASS_FLAG_SET_BIT_KHR,
  E_SCALING_MATRIX_PRESENT_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_SCALING_MATRIX_PRESENT_FLAG_SET_BIT_KHR,
  E_CHROMA_QP_INDEX_OFFSET_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_CHROMA_QP_INDEX_OFFSET_BIT_KHR,
  E_SECOND_CHROMA_QP_INDEX_OFFSET_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_SECOND_CHROMA_QP_INDEX_OFFSET_BIT_KHR,
  E_PIC_INIT_QP_MINUS26_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_PIC_INIT_QP_MINUS26_BIT_KHR,
  E_WEIGHTED_PRED_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_WEIGHTED_PRED_FLAG_SET_BIT_KHR,
  E_WEIGHTED_BIPRED_IDC_EXPLICIT_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_WEIGHTED_BIPRED_IDC_EXPLICIT_BIT_KHR,
  E_WEIGHTED_BIPRED_IDC_IMPLICIT_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_WEIGHTED_BIPRED_IDC_IMPLICIT_BIT_KHR,
  E_TRANSFORM_8X8_MODE_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_TRANSFORM_8X8_MODE_FLAG_SET_BIT_KHR,
  E_DIRECT_SPATIAL_MV_PRED_FLAG_UNSET_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_DIRECT_SPATIAL_MV_PRED_FLAG_UNSET_BIT_KHR,
  E_ENTROPY_CODING_MODE_FLAG_UNSET_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_ENTROPY_CODING_MODE_FLAG_UNSET_BIT_KHR,
  E_ENTROPY_CODING_MODE_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_ENTROPY_CODING_MODE_FLAG_SET_BIT_KHR,
  E_DIRECT_8X8_INFERENCE_FLAG_UNSET_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_DIRECT_8X8_INFERENCE_FLAG_UNSET_BIT_KHR,
  E_CONSTRAINED_INTRA_PRED_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_CONSTRAINED_INTRA_PRED_FLAG_SET_BIT_KHR,
  E_DEBLOCKING_FILTER_DISABLED_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_DISABLED_BIT_KHR,
  E_DEBLOCKING_FILTER_ENABLED_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_ENABLED_BIT_KHR,
  E_DEBLOCKING_FILTER_PARTIAL_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_PARTIAL_BIT_KHR,
  E_SLICE_QP_DELTA_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_SLICE_QP_DELTA_BIT_KHR,
  E_DIFFERENT_SLICE_QP_DELTA_BIT_KHR = VK_VIDEO_ENCODE_H264_STD_DIFFERENT_SLICE_QP_DELTA_BIT_KHR
};

enum class VideoEncodeH264RateControlMaskBits : VkVideoEncodeH264RateControlFlagsKHR {
  E_ATTEMPT_HRD_COMPLIANCE_BIT_KHR = VK_VIDEO_ENCODE_H264_RATE_CONTROL_ATTEMPT_HRD_COMPLIANCE_BIT_KHR,
  E_REGULAR_GOP_BIT_KHR = VK_VIDEO_ENCODE_H264_RATE_CONTROL_REGULAR_GOP_BIT_KHR,
  E_REFERENCE_PATTERN_FLAT_BIT_KHR = VK_VIDEO_ENCODE_H264_RATE_CONTROL_REFERENCE_PATTERN_FLAT_BIT_KHR,
  E_REFERENCE_PATTERN_DYADIC_BIT_KHR = VK_VIDEO_ENCODE_H264_RATE_CONTROL_REFERENCE_PATTERN_DYADIC_BIT_KHR,
  E_TEMPORAL_LAYER_PATTERN_DYADIC_BIT_KHR = VK_VIDEO_ENCODE_H264_RATE_CONTROL_TEMPORAL_LAYER_PATTERN_DYADIC_BIT_KHR
};

enum class HostImageCopyMaskBits : VkHostImageCopyFlagsEXT {
  E_MEMCPY_EXT = VK_HOST_IMAGE_COPY_MEMCPY_EXT
};

#ifdef VK_USE_PLATFORM_FUCHSIA

enum class ImageConstraintsInfoMaskBits : VkImageConstraintsInfoFlagsFUCHSIA {
  E_CPU_READ_RARELY_FUCHSIA = VK_IMAGE_CONSTRAINTS_INFO_CPU_READ_RARELY_FUCHSIA,
  E_CPU_READ_OFTEN_FUCHSIA = VK_IMAGE_CONSTRAINTS_INFO_CPU_READ_OFTEN_FUCHSIA,
  E_CPU_WRITE_RARELY_FUCHSIA = VK_IMAGE_CONSTRAINTS_INFO_CPU_WRITE_RARELY_FUCHSIA,
  E_CPU_WRITE_OFTEN_FUCHSIA = VK_IMAGE_CONSTRAINTS_INFO_CPU_WRITE_OFTEN_FUCHSIA,
  E_PROTECTED_OPTIONAL_FUCHSIA = VK_IMAGE_CONSTRAINTS_INFO_PROTECTED_OPTIONAL_FUCHSIA
};

#endif // VK_USE_PLATFORM_FUCHSIA

enum class FormatFeatureMaskBits2 : VkFormatFeatureFlags2 {
  E_SAMPLED_IMAGE_BIT = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT,
  E_SAMPLED_IMAGE_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT_KHR,
  E_STORAGE_IMAGE_BIT = VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT,
  E_STORAGE_IMAGE_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT_KHR,
  E_STORAGE_IMAGE_ATOMIC_BIT = VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT,
  E_STORAGE_IMAGE_ATOMIC_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT_KHR,
  E_UNIFORM_TEXEL_BUFFER_BIT = VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT,
  E_UNIFORM_TEXEL_BUFFER_BIT_KHR = VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR,
  E_STORAGE_TEXEL_BUFFER_BIT = VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT,
  E_STORAGE_TEXEL_BUFFER_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT_KHR,
  E_STORAGE_TEXEL_BUFFER_ATOMIC_BIT = VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT,
  E_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR,
  E_VERTEX_BUFFER_BIT = VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT,
  E_VERTEX_BUFFER_BIT_KHR = VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT_KHR,
  E_COLOR_ATTACHMENT_BIT = VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT,
  E_COLOR_ATTACHMENT_BIT_KHR = VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT_KHR,
  E_COLOR_ATTACHMENT_BLEND_BIT = VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT,
  E_COLOR_ATTACHMENT_BLEND_BIT_KHR = VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT_KHR,
  E_DEPTH_STENCIL_ATTACHMENT_BIT = VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT,
  E_DEPTH_STENCIL_ATTACHMENT_BIT_KHR = VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT_KHR,
  E_BLIT_SRC_BIT = VK_FORMAT_FEATURE_2_BLIT_SRC_BIT,
  E_BLIT_SRC_BIT_KHR = VK_FORMAT_FEATURE_2_BLIT_SRC_BIT_KHR,
  E_BLIT_DST_BIT = VK_FORMAT_FEATURE_2_BLIT_DST_BIT,
  E_BLIT_DST_BIT_KHR = VK_FORMAT_FEATURE_2_BLIT_DST_BIT_KHR,
  E_SAMPLED_IMAGE_FILTER_LINEAR_BIT = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT,
  E_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR,
  E_SAMPLED_IMAGE_FILTER_CUBIC_BIT = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT,
  E_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT,
  E_TRANSFER_SRC_BIT = VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT,
  E_TRANSFER_SRC_BIT_KHR = VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT_KHR,
  E_TRANSFER_DST_BIT = VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT,
  E_TRANSFER_DST_BIT_KHR = VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT_KHR,
  E_SAMPLED_IMAGE_FILTER_MINMAX_BIT = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT,
  E_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR,
  E_MIDPOINT_CHROMA_SAMPLES_BIT = VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT,
  E_MIDPOINT_CHROMA_SAMPLES_BIT_KHR = VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT_KHR,
  E_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT,
  E_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR,
  E_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT =
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT,
  E_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR =
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR,
  E_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT =
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT,
  E_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR =
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR,
  E_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT =
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT,
  E_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR =
    VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR,
  E_DISJOINT_BIT = VK_FORMAT_FEATURE_2_DISJOINT_BIT,
  E_DISJOINT_BIT_KHR = VK_FORMAT_FEATURE_2_DISJOINT_BIT_KHR,
  E_COSITED_CHROMA_SAMPLES_BIT = VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT,
  E_COSITED_CHROMA_SAMPLES_BIT_KHR = VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT_KHR,
  E_STORAGE_READ_WITHOUT_FORMAT_BIT = VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT,
  E_STORAGE_READ_WITHOUT_FORMAT_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT_KHR,
  E_STORAGE_WRITE_WITHOUT_FORMAT_BIT = VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT,
  E_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR = VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR,
  E_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT,
  E_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR = VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR
};

enum class RenderingMaskBits : VkRenderingFlags {
  E_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT = VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT,
  E_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR = VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR,
  E_SUSPENDING_BIT = VK_RENDERING_SUSPENDING_BIT,
  E_SUSPENDING_BIT_KHR = VK_RENDERING_SUSPENDING_BIT_KHR,
  E_RESUMING_BIT = VK_RENDERING_RESUMING_BIT,
  E_RESUMING_BIT_KHR = VK_RENDERING_RESUMING_BIT_KHR
};

enum class VideoEncodeH265CapabilityMaskBits : VkVideoEncodeH265CapabilityFlagsKHR {
  E_HRD_COMPLIANCE_BIT_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_HRD_COMPLIANCE_BIT_KHR,
  E_PREDICTION_WEIGHT_TABLE_GENERATED_BIT_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_PREDICTION_WEIGHT_TABLE_GENERATED_BIT_KHR,
  E_ROW_UNALIGNED_SLICE_SEGMENT_BIT_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_ROW_UNALIGNED_SLICE_SEGMENT_BIT_KHR,
  E_DIFFERENT_SLICE_SEGMENT_TYPE_BIT_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_DIFFERENT_SLICE_SEGMENT_TYPE_BIT_KHR,
  E_B_FRAME_IN_L0_LIST_BIT_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_B_FRAME_IN_L0_LIST_BIT_KHR,
  E_B_FRAME_IN_L1_LIST_BIT_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_B_FRAME_IN_L1_LIST_BIT_KHR,
  E_PER_PICTURE_TYPE_MIN_MAX_QP_BIT_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_PER_PICTURE_TYPE_MIN_MAX_QP_BIT_KHR,
  E_PER_SLICE_SEGMENT_CONSTANT_QP_BIT_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_PER_SLICE_SEGMENT_CONSTANT_QP_BIT_KHR,
  E_MULTIPLE_TILES_PER_SLICE_SEGMENT_BIT_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_MULTIPLE_TILES_PER_SLICE_SEGMENT_BIT_KHR,
  E_MULTIPLE_SLICE_SEGMENTS_PER_TILE_BIT_KHR = VK_VIDEO_ENCODE_H265_CAPABILITY_MULTIPLE_SLICE_SEGMENTS_PER_TILE_BIT_KHR
};

enum class VideoEncodeH265StdMaskBits : VkVideoEncodeH265StdFlagsKHR {
  E_SEPARATE_COLOR_PLANE_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_SEPARATE_COLOR_PLANE_FLAG_SET_BIT_KHR,
  E_SAMPLE_ADAPTIVE_OFFSET_ENABLED_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_SAMPLE_ADAPTIVE_OFFSET_ENABLED_FLAG_SET_BIT_KHR,
  E_SCALING_LIST_DATA_PRESENT_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_SCALING_LIST_DATA_PRESENT_FLAG_SET_BIT_KHR,
  E_PCM_ENABLED_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_PCM_ENABLED_FLAG_SET_BIT_KHR,
  E_SPS_TEMPORAL_MVP_ENABLED_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_SPS_TEMPORAL_MVP_ENABLED_FLAG_SET_BIT_KHR,
  E_INIT_QP_MINUS26_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_INIT_QP_MINUS26_BIT_KHR,
  E_WEIGHTED_PRED_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_WEIGHTED_PRED_FLAG_SET_BIT_KHR,
  E_WEIGHTED_BIPRED_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_WEIGHTED_BIPRED_FLAG_SET_BIT_KHR,
  E_LOG2_PARALLEL_MERGE_LEVEL_MINUS2_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_LOG2_PARALLEL_MERGE_LEVEL_MINUS2_BIT_KHR,
  E_SIGN_DATA_HIDING_ENABLED_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_SIGN_DATA_HIDING_ENABLED_FLAG_SET_BIT_KHR,
  E_TRANSFORM_SKIP_ENABLED_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_TRANSFORM_SKIP_ENABLED_FLAG_SET_BIT_KHR,
  E_TRANSFORM_SKIP_ENABLED_FLAG_UNSET_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_TRANSFORM_SKIP_ENABLED_FLAG_UNSET_BIT_KHR,
  E_PPS_SLICE_CHROMA_QP_OFFSETS_PRESENT_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_PPS_SLICE_CHROMA_QP_OFFSETS_PRESENT_FLAG_SET_BIT_KHR,
  E_TRANSQUANT_BYPASS_ENABLED_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_TRANSQUANT_BYPASS_ENABLED_FLAG_SET_BIT_KHR,
  E_CONSTRAINED_INTRA_PRED_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_CONSTRAINED_INTRA_PRED_FLAG_SET_BIT_KHR,
  E_ENTROPY_CODING_SYNC_ENABLED_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_ENTROPY_CODING_SYNC_ENABLED_FLAG_SET_BIT_KHR,
  E_DEBLOCKING_FILTER_OVERRIDE_ENABLED_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_DEBLOCKING_FILTER_OVERRIDE_ENABLED_FLAG_SET_BIT_KHR,
  E_DEPENDENT_SLICE_SEGMENTS_ENABLED_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_DEPENDENT_SLICE_SEGMENTS_ENABLED_FLAG_SET_BIT_KHR,
  E_DEPENDENT_SLICE_SEGMENT_FLAG_SET_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_DEPENDENT_SLICE_SEGMENT_FLAG_SET_BIT_KHR,
  E_SLICE_QP_DELTA_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_SLICE_QP_DELTA_BIT_KHR,
  E_DIFFERENT_SLICE_QP_DELTA_BIT_KHR = VK_VIDEO_ENCODE_H265_STD_DIFFERENT_SLICE_QP_DELTA_BIT_KHR
};

enum class VideoEncodeH265RateControlMaskBits : VkVideoEncodeH265RateControlFlagsKHR {
  E_ATTEMPT_HRD_COMPLIANCE_BIT_KHR = VK_VIDEO_ENCODE_H265_RATE_CONTROL_ATTEMPT_HRD_COMPLIANCE_BIT_KHR,
  E_REGULAR_GOP_BIT_KHR = VK_VIDEO_ENCODE_H265_RATE_CONTROL_REGULAR_GOP_BIT_KHR,
  E_REFERENCE_PATTERN_FLAT_BIT_KHR = VK_VIDEO_ENCODE_H265_RATE_CONTROL_REFERENCE_PATTERN_FLAT_BIT_KHR,
  E_REFERENCE_PATTERN_DYADIC_BIT_KHR = VK_VIDEO_ENCODE_H265_RATE_CONTROL_REFERENCE_PATTERN_DYADIC_BIT_KHR,
  E_TEMPORAL_SUB_LAYER_PATTERN_DYADIC_BIT_KHR = VK_VIDEO_ENCODE_H265_RATE_CONTROL_TEMPORAL_SUB_LAYER_PATTERN_DYADIC_BIT_KHR
};

enum class VideoEncodeH265CtbSizeMaskBits : VkVideoEncodeH265CtbSizeFlagsKHR {
  E_16_BIT_KHR = VK_VIDEO_ENCODE_H265_CTB_SIZE_16_BIT_KHR,
  E_32_BIT_KHR = VK_VIDEO_ENCODE_H265_CTB_SIZE_32_BIT_KHR,
  E_64_BIT_KHR = VK_VIDEO_ENCODE_H265_CTB_SIZE_64_BIT_KHR
};

enum class VideoEncodeH265TransformBlockSizeMaskBits : VkVideoEncodeH265TransformBlockSizeFlagsKHR {
  E_4_BIT_KHR = VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_4_BIT_KHR,
  E_8_BIT_KHR = VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_8_BIT_KHR,
  E_16_BIT_KHR = VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_16_BIT_KHR,
  E_32_BIT_KHR = VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_32_BIT_KHR
};

#ifdef VK_USE_PLATFORM_METAL_EXT

enum class ExportMetalObjectTypeMaskBits : VkExportMetalObjectTypeFlagsEXT {
  E_METAL_DEVICE_BIT_EXT = VK_EXPORT_METAL_OBJECT_TYPE_METAL_DEVICE_BIT_EXT,
  E_METAL_COMMAND_QUEUE_BIT_EXT = VK_EXPORT_METAL_OBJECT_TYPE_METAL_COMMAND_QUEUE_BIT_EXT,
  E_METAL_BUFFER_BIT_EXT = VK_EXPORT_METAL_OBJECT_TYPE_METAL_BUFFER_BIT_EXT,
  E_METAL_TEXTURE_BIT_EXT = VK_EXPORT_METAL_OBJECT_TYPE_METAL_TEXTURE_BIT_EXT,
  E_METAL_IOSURFACE_BIT_EXT = VK_EXPORT_METAL_OBJECT_TYPE_METAL_IOSURFACE_BIT_EXT,
  E_METAL_SHARED_EVENT_BIT_EXT = VK_EXPORT_METAL_OBJECT_TYPE_METAL_SHARED_EVENT_BIT_EXT
};

#endif // VK_USE_PLATFORM_METAL_EXT

enum class ImageCompressionMaskBits : VkImageCompressionFlagsEXT {
  E_DEFAULT_EXT = VK_IMAGE_COMPRESSION_DEFAULT_EXT,
  E_FIXED_RATE_DEFAULT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_DEFAULT_EXT,
  E_FIXED_RATE_EXPLICIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_EXPLICIT_EXT,
  E_DISABLED_EXT = VK_IMAGE_COMPRESSION_DISABLED_EXT
};

enum class ImageCompressionFixedRateMaskBits : VkImageCompressionFixedRateFlagsEXT {
  E_NONE_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_NONE_EXT,
  E_1BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_1BPC_BIT_EXT,
  E_2BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_2BPC_BIT_EXT,
  E_3BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_3BPC_BIT_EXT,
  E_4BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_4BPC_BIT_EXT,
  E_5BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_5BPC_BIT_EXT,
  E_6BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_6BPC_BIT_EXT,
  E_7BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_7BPC_BIT_EXT,
  E_8BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_8BPC_BIT_EXT,
  E_9BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_9BPC_BIT_EXT,
  E_10BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_10BPC_BIT_EXT,
  E_11BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_11BPC_BIT_EXT,
  E_12BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_12BPC_BIT_EXT,
  E_13BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_13BPC_BIT_EXT,
  E_14BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_14BPC_BIT_EXT,
  E_15BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_15BPC_BIT_EXT,
  E_16BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_16BPC_BIT_EXT,
  E_17BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_17BPC_BIT_EXT,
  E_18BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_18BPC_BIT_EXT,
  E_19BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_19BPC_BIT_EXT,
  E_20BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_20BPC_BIT_EXT,
  E_21BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_21BPC_BIT_EXT,
  E_22BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_22BPC_BIT_EXT,
  E_23BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_23BPC_BIT_EXT,
  E_24BPC_BIT_EXT = VK_IMAGE_COMPRESSION_FIXED_RATE_24BPC_BIT_EXT
};

enum class PipelineRobustnessBufferBehavior {
  E_DEVICE_DEFAULT_EXT = VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DEVICE_DEFAULT_EXT,
  E_DISABLED_EXT = VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DISABLED_EXT,
  E_ROBUST_BUFFER_ACCESS_EXT = VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_EXT,
  E_ROBUST_BUFFER_ACCESS_2_EXT = VK_PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_2_EXT
};

enum class PipelineRobustnessImageBehavior {
  E_DEVICE_DEFAULT_EXT = VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DEVICE_DEFAULT_EXT,
  E_DISABLED_EXT = VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DISABLED_EXT,
  E_ROBUST_IMAGE_ACCESS_EXT = VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_EXT,
  E_ROBUST_IMAGE_ACCESS_2_EXT = VK_PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_2_EXT
};

enum class OpticalFlowGridSizeMaskBits : VkOpticalFlowGridSizeFlagsNV {
  E_UNKNOWN_NV = VK_OPTICAL_FLOW_GRID_SIZE_UNKNOWN_NV,
  E_1X1_BIT_NV = VK_OPTICAL_FLOW_GRID_SIZE_1X1_BIT_NV,
  E_2X2_BIT_NV = VK_OPTICAL_FLOW_GRID_SIZE_2X2_BIT_NV,
  E_4X4_BIT_NV = VK_OPTICAL_FLOW_GRID_SIZE_4X4_BIT_NV,
  E_8X8_BIT_NV = VK_OPTICAL_FLOW_GRID_SIZE_8X8_BIT_NV
};

enum class OpticalFlowUsageMaskBits : VkOpticalFlowUsageFlagsNV {
  E_UNKNOWN_NV = VK_OPTICAL_FLOW_USAGE_UNKNOWN_NV,
  E_INPUT_BIT_NV = VK_OPTICAL_FLOW_USAGE_INPUT_BIT_NV,
  E_OUTPUT_BIT_NV = VK_OPTICAL_FLOW_USAGE_OUTPUT_BIT_NV,
  E_HINT_BIT_NV = VK_OPTICAL_FLOW_USAGE_HINT_BIT_NV,
  E_COST_BIT_NV = VK_OPTICAL_FLOW_USAGE_COST_BIT_NV,
  E_GLOBAL_FLOW_BIT_NV = VK_OPTICAL_FLOW_USAGE_GLOBAL_FLOW_BIT_NV
};

enum class OpticalFlowPerformanceLevel {
  E_UNKNOWN_NV = VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_UNKNOWN_NV,
  E_SLOW_NV = VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_SLOW_NV,
  E_MEDIUM_NV = VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_MEDIUM_NV,
  E_FAST_NV = VK_OPTICAL_FLOW_PERFORMANCE_LEVEL_FAST_NV
};

enum class OpticalFlowSessionBindingPoint {
  E_UNKNOWN_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_UNKNOWN_NV,
  E_INPUT_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_INPUT_NV,
  E_REFERENCE_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_REFERENCE_NV,
  E_HINT_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_HINT_NV,
  E_FLOW_VECTOR_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_FLOW_VECTOR_NV,
  E_BACKWARD_FLOW_VECTOR_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_BACKWARD_FLOW_VECTOR_NV,
  E_COST_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_COST_NV,
  E_BACKWARD_COST_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_BACKWARD_COST_NV,
  E_GLOBAL_FLOW_NV = VK_OPTICAL_FLOW_SESSION_BINDING_POINT_GLOBAL_FLOW_NV
};

enum class OpticalFlowSessionCreateMaskBits : VkOpticalFlowSessionCreateFlagsNV {
  E_ENABLE_HINT_BIT_NV = VK_OPTICAL_FLOW_SESSION_CREATE_ENABLE_HINT_BIT_NV,
  E_ENABLE_COST_BIT_NV = VK_OPTICAL_FLOW_SESSION_CREATE_ENABLE_COST_BIT_NV,
  E_ENABLE_GLOBAL_FLOW_BIT_NV = VK_OPTICAL_FLOW_SESSION_CREATE_ENABLE_GLOBAL_FLOW_BIT_NV,
  E_ALLOW_REGIONS_BIT_NV = VK_OPTICAL_FLOW_SESSION_CREATE_ALLOW_REGIONS_BIT_NV,
  E_BOTH_DIRECTIONS_BIT_NV = VK_OPTICAL_FLOW_SESSION_CREATE_BOTH_DIRECTIONS_BIT_NV
};

enum class OpticalFlowExecuteMaskBits : VkOpticalFlowExecuteFlagsNV {
  E_DISABLE_TEMPORAL_HINTS_BIT_NV = VK_OPTICAL_FLOW_EXECUTE_DISABLE_TEMPORAL_HINTS_BIT_NV
};

enum class MicromapType {
  E_OPACITY_MICROMAP_EXT = VK_MICROMAP_TYPE_OPACITY_MICROMAP_EXT
};

enum class BuildMicromapMaskBits : VkBuildMicromapFlagsEXT {
  E_PREFER_FAST_TRACE_BIT_EXT = VK_BUILD_MICROMAP_PREFER_FAST_TRACE_BIT_EXT,
  E_PREFER_FAST_BUILD_BIT_EXT = VK_BUILD_MICROMAP_PREFER_FAST_BUILD_BIT_EXT,
  E_ALLOW_COMPACTION_BIT_EXT = VK_BUILD_MICROMAP_ALLOW_COMPACTION_BIT_EXT
};

enum class MicromapCreateMaskBits : VkMicromapCreateFlagsEXT {
  E_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT = VK_MICROMAP_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT
};

enum class CopyMicromapMode {
  E_CLONE_EXT = VK_COPY_MICROMAP_MODE_CLONE_EXT,
  E_SERIALIZE_EXT = VK_COPY_MICROMAP_MODE_SERIALIZE_EXT,
  E_DESERIALIZE_EXT = VK_COPY_MICROMAP_MODE_DESERIALIZE_EXT,
  E_COMPACT_EXT = VK_COPY_MICROMAP_MODE_COMPACT_EXT
};

enum class BuildMicromapMode {
  E_BUILD_EXT = VK_BUILD_MICROMAP_MODE_BUILD_EXT
};

enum class OpacityMicromapFormat {
  E_2_STATE_EXT = VK_OPACITY_MICROMAP_FORMAT_2_STATE_EXT,
  E_4_STATE_EXT = VK_OPACITY_MICROMAP_FORMAT_4_STATE_EXT
};

enum class OpacityMicromapSpecialIndex {
  E_FULLY_TRANSPARENT_EXT = VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_TRANSPARENT_EXT,
  E_FULLY_OPAQUE_EXT = VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_OPAQUE_EXT,
  E_FULLY_UNKNOWN_TRANSPARENT_EXT = VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_UNKNOWN_TRANSPARENT_EXT,
  E_FULLY_UNKNOWN_OPAQUE_EXT = VK_OPACITY_MICROMAP_SPECIAL_INDEX_FULLY_UNKNOWN_OPAQUE_EXT
};

enum class DepthBiasRepresentation {
  E_LEAST_REPRESENTABLE_VALUE_FORMAT_EXT = VK_DEPTH_BIAS_REPRESENTATION_LEAST_REPRESENTABLE_VALUE_FORMAT_EXT,
  E_LEAST_REPRESENTABLE_VALUE_FORCE_UNORM_EXT = VK_DEPTH_BIAS_REPRESENTATION_LEAST_REPRESENTABLE_VALUE_FORCE_UNORM_EXT,
  E_FLOAT_EXT = VK_DEPTH_BIAS_REPRESENTATION_FLOAT_EXT
};

enum class DeviceFaultAddressType {
  E_NONE_EXT = VK_DEVICE_FAULT_ADDRESS_TYPE_NONE_EXT,
  E_READ_INVALID_EXT = VK_DEVICE_FAULT_ADDRESS_TYPE_READ_INVALID_EXT,
  E_WRITE_INVALID_EXT = VK_DEVICE_FAULT_ADDRESS_TYPE_WRITE_INVALID_EXT,
  E_EXECUTE_INVALID_EXT = VK_DEVICE_FAULT_ADDRESS_TYPE_EXECUTE_INVALID_EXT,
  E_INSTRUCTION_POINTER_UNKNOWN_EXT = VK_DEVICE_FAULT_ADDRESS_TYPE_INSTRUCTION_POINTER_UNKNOWN_EXT,
  E_INSTRUCTION_POINTER_INVALID_EXT = VK_DEVICE_FAULT_ADDRESS_TYPE_INSTRUCTION_POINTER_INVALID_EXT,
  E_INSTRUCTION_POINTER_FAULT_EXT = VK_DEVICE_FAULT_ADDRESS_TYPE_INSTRUCTION_POINTER_FAULT_EXT
};

enum class DeviceFaultVendorBinaryHeaderVersion {
  E_ONE_EXT = VK_DEVICE_FAULT_VENDOR_BINARY_HEADER_VERSION_ONE_EXT
};

#ifdef VK_ENABLE_BETA_EXTENSIONS

enum class DisplacementMicromapFormat {
  E_64_TRIANGLES_64_BYTES_NV = VK_DISPLACEMENT_MICROMAP_FORMAT_64_TRIANGLES_64_BYTES_NV,
  E_256_TRIANGLES_128_BYTES_NV = VK_DISPLACEMENT_MICROMAP_FORMAT_256_TRIANGLES_128_BYTES_NV,
  E_1024_TRIANGLES_128_BYTES_NV = VK_DISPLACEMENT_MICROMAP_FORMAT_1024_TRIANGLES_128_BYTES_NV
};

#endif // VK_ENABLE_BETA_EXTENSIONS

enum class ShaderCreateMaskBits : VkShaderCreateFlagsEXT {
  E_LINK_STAGE_BIT_EXT = VK_SHADER_CREATE_LINK_STAGE_BIT_EXT
};

enum class ShaderCodeType {
  E_BINARY_EXT = VK_SHADER_CODE_TYPE_BINARY_EXT,
  E_SPIRV_EXT = VK_SHADER_CODE_TYPE_SPIRV_EXT
};

enum class Scope {
  E_DEVICE_KHR = VK_SCOPE_DEVICE_KHR,
  E_WORKGROUP_KHR = VK_SCOPE_WORKGROUP_KHR,
  E_SUBGROUP_KHR = VK_SCOPE_SUBGROUP_KHR,
  E_QUEUE_FAMILY_KHR = VK_SCOPE_QUEUE_FAMILY_KHR
};

enum class ComponentType {
  E_FLOAT16_KHR = VK_COMPONENT_TYPE_FLOAT16_KHR,
  E_FLOAT32_KHR = VK_COMPONENT_TYPE_FLOAT32_KHR,
  E_FLOAT64_KHR = VK_COMPONENT_TYPE_FLOAT64_KHR,
  E_SINT8_KHR = VK_COMPONENT_TYPE_SINT8_KHR,
  E_SINT16_KHR = VK_COMPONENT_TYPE_SINT16_KHR,
  E_SINT32_KHR = VK_COMPONENT_TYPE_SINT32_KHR,
  E_SINT64_KHR = VK_COMPONENT_TYPE_SINT64_KHR,
  E_UINT8_KHR = VK_COMPONENT_TYPE_UINT8_KHR,
  E_UINT16_KHR = VK_COMPONENT_TYPE_UINT16_KHR,
  E_UINT32_KHR = VK_COMPONENT_TYPE_UINT32_KHR,
  E_UINT64_KHR = VK_COMPONENT_TYPE_UINT64_KHR
};

enum class CubicFilterWeights {
  E_CATMULL_ROM_QCOM = VK_CUBIC_FILTER_WEIGHTS_CATMULL_ROM_QCOM,
  E_ZERO_TANGENT_CARDINAL_QCOM = VK_CUBIC_FILTER_WEIGHTS_ZERO_TANGENT_CARDINAL_QCOM,
  E_B_SPLINE_QCOM = VK_CUBIC_FILTER_WEIGHTS_B_SPLINE_QCOM,
  E_MITCHELL_NETRAVALI_QCOM = VK_CUBIC_FILTER_WEIGHTS_MITCHELL_NETRAVALI_QCOM
};

enum class BlockMatchWindowCompareMode {
  E_MIN_QCOM = VK_BLOCK_MATCH_WINDOW_COMPARE_MODE_MIN_QCOM,
  E_MAX_QCOM = VK_BLOCK_MATCH_WINDOW_COMPARE_MODE_MAX_QCOM
};

enum class PhysicalDeviceLayeredApi {
  E_VULKAN_KHR = VK_PHYSICAL_DEVICE_LAYERED_API_VULKAN_KHR,
  E_D3D12_KHR = VK_PHYSICAL_DEVICE_LAYERED_API_D3D12_KHR,
  E_METAL_KHR = VK_PHYSICAL_DEVICE_LAYERED_API_METAL_KHR,
  E_OPENGL_KHR = VK_PHYSICAL_DEVICE_LAYERED_API_OPENGL_KHR,
  E_OPENGLES_KHR = VK_PHYSICAL_DEVICE_LAYERED_API_OPENGLES_KHR
};

enum class LayeredDriverUnderlyingApi {
  E_NONE_MSFT = VK_LAYERED_DRIVER_UNDERLYING_API_NONE_MSFT,
  E_D3D12_MSFT = VK_LAYERED_DRIVER_UNDERLYING_API_D3D12_MSFT
};

enum class LatencyMarker {
  E_SIMULATION_START_NV = VK_LATENCY_MARKER_SIMULATION_START_NV,
  E_SIMULATION_END_NV = VK_LATENCY_MARKER_SIMULATION_END_NV,
  E_RENDERSUBMIT_START_NV = VK_LATENCY_MARKER_RENDERSUBMIT_START_NV,
  E_RENDERSUBMIT_END_NV = VK_LATENCY_MARKER_RENDERSUBMIT_END_NV,
  E_PRESENT_START_NV = VK_LATENCY_MARKER_PRESENT_START_NV,
  E_PRESENT_END_NV = VK_LATENCY_MARKER_PRESENT_END_NV,
  E_INPUT_SAMPLE_NV = VK_LATENCY_MARKER_INPUT_SAMPLE_NV,
  E_TRIGGER_FLASH_NV = VK_LATENCY_MARKER_TRIGGER_FLASH_NV,
  E_OUT_OF_BAND_RENDERSUBMIT_START_NV = VK_LATENCY_MARKER_OUT_OF_BAND_RENDERSUBMIT_START_NV,
  E_OUT_OF_BAND_RENDERSUBMIT_END_NV = VK_LATENCY_MARKER_OUT_OF_BAND_RENDERSUBMIT_END_NV,
  E_OUT_OF_BAND_PRESENT_START_NV = VK_LATENCY_MARKER_OUT_OF_BAND_PRESENT_START_NV,
  E_OUT_OF_BAND_PRESENT_END_NV = VK_LATENCY_MARKER_OUT_OF_BAND_PRESENT_END_NV
};

enum class OutOfBandQueueType {
  E_RENDER_NV = VK_OUT_OF_BAND_QUEUE_TYPE_RENDER_NV,
  E_PRESENT_NV = VK_OUT_OF_BAND_QUEUE_TYPE_PRESENT_NV
};

enum class DeviceQueueCreateMaskBits : VkDeviceQueueCreateFlags {
  E_PROTECTED_BIT = VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT
};

enum class DescriptorSetLayoutCreateMaskBits : VkDescriptorSetLayoutCreateFlags {
  E_UPDATE_AFTER_BIND_POOL_BIT = VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT
};

enum class FramebufferCreateMaskBits : VkFramebufferCreateFlags {
  E_IMAGELESS_BIT = VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT
};

enum class PipelineCacheCreateMaskBits : VkPipelineCacheCreateFlags {
  E_EXTERNALLY_SYNCHRONIZED_BIT = VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT
};

enum class EventCreateMaskBits : VkEventCreateFlags {
  E_DEVICE_ONLY_BIT = VK_EVENT_CREATE_DEVICE_ONLY_BIT
};

enum class PipelineShaderStageCreateMaskBits : VkPipelineShaderStageCreateFlags {
  E_ALLOW_VARYING_SUBGROUP_SIZE_BIT = VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT,
  E_REQUIRE_FULL_SUBGROUPS_BIT = VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT
};

} // end namespace Wolf

#endif // WOLF_ENUMS_H
